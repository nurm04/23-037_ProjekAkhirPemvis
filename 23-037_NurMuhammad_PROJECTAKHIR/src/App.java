import java.awt.CardLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerDateModel;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class App extends javax.swing.JFrame {
    
    static User userLogin = null;
    Tiket_Kendaraan DataEdit_TK = null;
    Tiket_Wisata DataEdit_TW = null;
    Tiket_Hotel DataEdit_TI = null;
    
    SimpleDateFormat outputFormatDatetime = new SimpleDateFormat("HH:mm dd-MM-yyyy");

    public App() {
        initComponents();
        setSize(1280, 720);
        setExtendedState(this.MAXIMIZED_BOTH);
        
        HargaTiket_TK.setEditable(false);
        HargaTiket_TW.setEditable(false);
        TotalHarga_TI.setEditable(false);
        
        App.add(LoginPanel, "LoginPanel");
        App.add(RegisterPanel, "RegisterPanel");
        App.add(UserPage, "UserPage");
        App.add(AdminPage, "AdminPage");
        
        KontenUtama.add(PesanKendaraanPanel, "PesanKendaraanPanel");
        KontenUtama.add(PesanWisataPanel, "PesanWisataPanel");
        KontenUtama.add(PesanHotelPanel, "PesanHotelPanel");
        KontenUtama.add(HistoriPanel, "HistoriPemesananPanel");
        
        KontenUtamaAdmin.add( DataUser, "DataUser");
        KontenUtamaAdmin.add( DataTransaksi, "DataTransaksi");
        KontenUtamaAdmin.add( DataTiketKendaraan, "DataTiketKendaraan");
        KontenUtamaAdmin.add(DataTiketWisata, "DataTiketWisata");
        KontenUtamaAdmin.add(DataTiketHotel, "DataTiketHotel");
        
        JumlahKamarStandart.setEnabled(false);
        JumlahKamarDeluxe.setEnabled(false);
        JumlahKamarSuite.setEnabled(false);
        
        setFormTanggal();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        App = new javax.swing.JPanel();
        LoginPanel = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        emailLogin = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        Login = new javax.swing.JButton();
        jLabel43 = new javax.swing.JLabel();
        pindahRegister = new javax.swing.JButton();
        passwordLogin = new javax.swing.JTextField();
        errEmailLogin = new javax.swing.JLabel();
        errPasswordLogin = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        RegisterPanel = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        namaRegister = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        Register = new javax.swing.JButton();
        jLabel38 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        emailRegister = new javax.swing.JTextField();
        passwordRegister = new javax.swing.JTextField();
        no_telpRegister = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        pindahLogin = new javax.swing.JButton();
        errNamaRegister = new javax.swing.JLabel();
        errEmailRegister = new javax.swing.JLabel();
        errNohpRegister = new javax.swing.JLabel();
        errPasswordRegister = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        UserPage = new javax.swing.JPanel();
        HomePanel = new javax.swing.JPanel();
        Navbar = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Logout = new javax.swing.JButton();
        KontenUtama = new javax.swing.JPanel();
        PesanKendaraanPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        CBJenisKendaraan_TK = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        CBTempatTujuan_TK = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        Waktu_TK = new javax.swing.JSpinner();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        Jumlah_TK = new javax.swing.JSpinner();
        HargaTiket_TK = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        Pesan_TK = new javax.swing.JButton();
        errCBJenisKendaraan_TK = new javax.swing.JLabel();
        errCBTempatAsal_TK = new javax.swing.JLabel();
        CBTempatAsal_TK = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        PesanWisataPanel = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        Pesan_TW = new javax.swing.JButton();
        HargaTiket_TW = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        Jumlah_TW = new javax.swing.JSpinner();
        Waktu_TW = new javax.swing.JSpinner();
        jLabel27 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        CBPilihWisata_TW = new javax.swing.JComboBox<>();
        CBPilihKota_TW = new javax.swing.JComboBox<>();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        errCBPilihKota_TW = new javax.swing.JLabel();
        errCBPilihWisata_TW = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        PesanHotelPanel = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        JenisKamarStandart = new javax.swing.JCheckBox();
        jLabel37 = new javax.swing.JLabel();
        JenisKamarDeluxe = new javax.swing.JCheckBox();
        jLabel17 = new javax.swing.JLabel();
        JenisKamarSuite = new javax.swing.JCheckBox();
        Pesan_TI = new javax.swing.JButton();
        JumlahKamarDeluxe = new javax.swing.JSpinner();
        jLabel31 = new javax.swing.JLabel();
        JumlahKamarSuite = new javax.swing.JSpinner();
        TglCekin_TI = new javax.swing.JSpinner();
        jLabel18 = new javax.swing.JLabel();
        TglCekout_TI = new javax.swing.JSpinner();
        CBPilihKota_TI = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        CBPilihHotel_TI = new javax.swing.JComboBox<>();
        jLabel33 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        Hitung_TI = new javax.swing.JButton();
        JumlahKamarStandart = new javax.swing.JSpinner();
        TotalHarga_TI = new javax.swing.JTextField();
        CekKetersediaan_TI = new javax.swing.JButton();
        errCBPilihKota_TI = new javax.swing.JLabel();
        errCBPilihHotel_TI = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        HistoriPanel = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_TK = new javax.swing.JTable();
        edit_TK = new javax.swing.JButton();
        batalPesan_TK = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        edit_TW = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_TW = new javax.swing.JTable();
        batalPesan_TW = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        DetailPesananKamar = new javax.swing.JInternalFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        TADetail_TI = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_TI = new javax.swing.JTable();
        detail_TI = new javax.swing.JButton();
        edit_TI1 = new javax.swing.JButton();
        batalPesan_TI = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        AdminPage = new javax.swing.JPanel();
        DashboardPanel = new javax.swing.JPanel();
        Navbar1 = new javax.swing.JPanel();
        jLabel44 = new javax.swing.JLabel();
        out = new javax.swing.JButton();
        Konten = new javax.swing.JPanel();
        Sidebar = new javax.swing.JPanel();
        navDataTK = new javax.swing.JButton();
        navDataTW = new javax.swing.JButton();
        navDataTH = new javax.swing.JButton();
        navDataUser = new javax.swing.JButton();
        navDataTransaksi = new javax.swing.JButton();
        KontenUtamaAdmin = new javax.swing.JPanel();
        DataUser = new javax.swing.JScrollPane();
        contentDataUser = new javax.swing.JPanel();
        jLabel79 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        tbl_dataUser = new javax.swing.JTable();
        cariUser = new javax.swing.JTextField();
        cari_User = new javax.swing.JButton();
        DataTransaksi = new javax.swing.JScrollPane();
        contentDataTransaksi = new javax.swing.JPanel();
        jLabel78 = new javax.swing.JLabel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanel15 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        tbl_TKAdmin = new javax.swing.JTable();
        jPanel16 = new javax.swing.JPanel();
        jScrollPane10 = new javax.swing.JScrollPane();
        tbl_TWAdmin = new javax.swing.JTable();
        jPanel21 = new javax.swing.JPanel();
        DetailTransaksiKamar = new javax.swing.JInternalFrame();
        jScrollPane12 = new javax.swing.JScrollPane();
        DetailTransaksi_TI = new javax.swing.JTextArea();
        jScrollPane13 = new javax.swing.JScrollPane();
        tbl_TIAdmin = new javax.swing.JTable();
        DataTiketKendaraan = new javax.swing.JScrollPane();
        contentDataTiketKendaraan = new javax.swing.JPanel();
        TKFormFrame = new javax.swing.JInternalFrame();
        jPanel13 = new javax.swing.JPanel();
        jLabel45 = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        SubmitTK = new javax.swing.JButton();
        jLabel47 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        errAsalFormAdmin = new javax.swing.JLabel();
        errTujuanFormAdmin = new javax.swing.JLabel();
        errKendaraanFormAdmin = new javax.swing.JLabel();
        errHargaKFormAdmin = new javax.swing.JLabel();
        asalFormAdmin = new javax.swing.JTextField();
        id_tarifForm = new javax.swing.JLabel();
        kendaraanFormAdmin = new javax.swing.JComboBox<>();
        tujuanFormAdmin = new javax.swing.JComboBox<>();
        hargaKFormAdmin = new javax.swing.JTextField();
        jPanel14 = new javax.swing.JPanel();
        titleTKForm = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_dataTK = new javax.swing.JTable();
        addDataTK = new javax.swing.JButton();
        cari_TK = new javax.swing.JButton();
        cariJenisKendaraan = new javax.swing.JComboBox<>();
        cariTempatTujuan = new javax.swing.JComboBox<>();
        cariTempatAsal = new javax.swing.JComboBox<>();
        DataTiketWisata = new javax.swing.JScrollPane();
        contentDataTiketWisata = new javax.swing.JPanel();
        TWFormFrame = new javax.swing.JInternalFrame();
        jPanel17 = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        SubmitTW = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        errWisataFormAdmin = new javax.swing.JLabel();
        errKotaWFormAdmin = new javax.swing.JLabel();
        errHargaWFormAdmin = new javax.swing.JLabel();
        wisataFormAdmin = new javax.swing.JTextField();
        id_wisataForm = new javax.swing.JLabel();
        kotaWFormAdmin = new javax.swing.JComboBox<>();
        hargaWFormAdmin = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        titleTWForm = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tbl_dataTW = new javax.swing.JTable();
        addDataTW = new javax.swing.JButton();
        cari_TW = new javax.swing.JButton();
        cariTW = new javax.swing.JTextField();
        DataTiketHotel = new javax.swing.JScrollPane();
        contentDataTiketHotel = new javax.swing.JPanel();
        THFormFrame = new javax.swing.JInternalFrame();
        jPanel19 = new javax.swing.JPanel();
        jLabel67 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        SubmitTH = new javax.swing.JButton();
        jLabel69 = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        errHotelFormAdmin = new javax.swing.JLabel();
        errKotaHFormAdmin = new javax.swing.JLabel();
        errJenisFormAdmin = new javax.swing.JLabel();
        errHargaHFormAdmin = new javax.swing.JLabel();
        errTersediaFormAdmin = new javax.swing.JLabel();
        hotelFormAdmin = new javax.swing.JTextField();
        jenisFormAdmin = new javax.swing.JTextField();
        id_hotelForm = new javax.swing.JLabel();
        kotaHFormAdmin = new javax.swing.JComboBox<>();
        hargaHFormAdmin = new javax.swing.JTextField();
        tersediaFormAdmin = new javax.swing.JTextField();
        jPanel20 = new javax.swing.JPanel();
        titleTHForm = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        tbl_dataTH = new javax.swing.JTable();
        addDataTH = new javax.swing.JButton();
        cari_TH = new javax.swing.JButton();
        cariTH = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        App.setLayout(new java.awt.CardLayout());

        LoginPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel11.setBackground(new java.awt.Color(255, 255, 255, 170));

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(55, 89, 165));
        jLabel20.setText("Login");

        emailLogin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        emailLogin.setForeground(new java.awt.Color(0, 0, 0));

        jLabel23.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(55, 89, 165));
        jLabel23.setText("Email");

        jLabel24.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(55, 89, 165));
        jLabel24.setText("Password");

        Login.setBackground(new java.awt.Color(55, 89, 165));
        Login.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Login.setForeground(new java.awt.Color(255, 255, 255));
        Login.setText("Login");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        jLabel43.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(0, 0, 0));
        jLabel43.setText("Belum punya akun? ");

        pindahRegister.setBackground(new java.awt.Color(55, 89, 165));
        pindahRegister.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pindahRegister.setForeground(new java.awt.Color(255, 255, 255));
        pindahRegister.setText("Register");
        pindahRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pindahRegisterActionPerformed(evt);
            }
        });

        passwordLogin.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        passwordLogin.setForeground(new java.awt.Color(0, 0, 0));

        errEmailLogin.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errEmailLogin.setForeground(new java.awt.Color(255, 0, 0));

        errPasswordLogin.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errPasswordLogin.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(Login)
                        .addGap(207, 207, 207))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pindahRegister)
                        .addGap(115, 115, 115))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                .addGap(0, 39, Short.MAX_VALUE)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errEmailLogin)))
                            .addGroup(jPanel11Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errPasswordLogin))))
                        .addGap(48, 48, 48))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel11Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addGap(200, 200, 200))))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel23, jLabel24});

        jPanel11Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {emailLogin, passwordLogin});

        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel20)
                .addGap(48, 48, 48)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23))
                .addGap(3, 3, 3)
                .addComponent(errEmailLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24)
                    .addComponent(passwordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errPasswordLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Login)
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(pindahRegister))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel11Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Login, emailLogin, passwordLogin, pindahRegister});

        LoginPanel.add(jPanel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 150, 500, 370));

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/jcr_content.jpg"))); // NOI18N
        LoginPanel.add(jLabel39, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 730));

        App.add(LoginPanel, "card2");

        RegisterPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel12.setBackground(new java.awt.Color(255, 255, 255, 170));

        jLabel22.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(55, 89, 165));
        jLabel22.setText("Register");

        namaRegister.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        namaRegister.setForeground(new java.awt.Color(0, 0, 0));

        jLabel29.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel29.setForeground(new java.awt.Color(55, 89, 165));
        jLabel29.setText("Nama");

        jLabel30.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel30.setForeground(new java.awt.Color(55, 89, 165));
        jLabel30.setText("Email");

        Register.setBackground(new java.awt.Color(55, 89, 165));
        Register.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Register.setForeground(new java.awt.Color(255, 255, 255));
        Register.setText("Register");
        Register.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterActionPerformed(evt);
            }
        });

        jLabel38.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(55, 89, 165));
        jLabel38.setText("Password");

        jLabel41.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(55, 89, 165));
        jLabel41.setText("No HP");

        emailRegister.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        emailRegister.setForeground(new java.awt.Color(0, 0, 0));

        passwordRegister.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        passwordRegister.setForeground(new java.awt.Color(0, 0, 0));

        no_telpRegister.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        no_telpRegister.setForeground(new java.awt.Color(0, 0, 0));

        jLabel42.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(0, 0, 0));
        jLabel42.setText("Sudah punya akun? ");

        pindahLogin.setBackground(new java.awt.Color(55, 89, 165));
        pindahLogin.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        pindahLogin.setForeground(new java.awt.Color(255, 255, 255));
        pindahLogin.setText("Login");
        pindahLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pindahLoginActionPerformed(evt);
            }
        });

        errNamaRegister.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errNamaRegister.setForeground(new java.awt.Color(255, 0, 0));

        errEmailRegister.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errEmailRegister.setForeground(new java.awt.Color(255, 0, 0));

        errNohpRegister.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errNohpRegister.setForeground(new java.awt.Color(255, 0, 0));

        errPasswordRegister.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errPasswordRegister.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(namaRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errNamaRegister)))
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(emailRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errEmailRegister))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel41)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(no_telpRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(errPasswordRegister)
                                .addComponent(errNohpRegister)
                                .addGroup(jPanel12Layout.createSequentialGroup()
                                    .addGap(6, 6, 6)
                                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(Register)
                                        .addComponent(jLabel42))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(pindahLogin))))))
                .addGap(48, 48, 48))
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(175, 175, 175)
                .addComponent(jLabel22)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel29, jLabel30, jLabel38, jLabel41});

        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(jLabel22)
                .addGap(32, 32, 32)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(namaRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(0, 0, 0)
                .addComponent(errNamaRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(emailRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(errEmailRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(passwordRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(errPasswordRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel41)
                    .addComponent(no_telpRegister, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(errNohpRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(Register)
                .addGap(27, 27, 27)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel42)
                    .addComponent(pindahLogin))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        jPanel12Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {Register, emailRegister, namaRegister, no_telpRegister, passwordRegister, pindahLogin});

        RegisterPanel.add(jPanel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 100, 500, 480));

        jLabel40.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/jcr_content.jpg"))); // NOI18N
        RegisterPanel.add(jLabel40, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1290, 730));

        App.add(RegisterPanel, "card2");

        UserPage.setLayout(new java.awt.BorderLayout());

        HomePanel.setBackground(new java.awt.Color(255, 255, 255));
        HomePanel.setLayout(new java.awt.BorderLayout());

        Navbar.setBackground(new java.awt.Color(161, 190, 255));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(55, 89, 165));
        jLabel1.setText("Aplikasi Travel");

        jPanel3.setBackground(new java.awt.Color(161, 190, 255));
        jPanel3.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 10, 5));

        jLabel2.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(55, 89, 165));
        jLabel2.setText("Tiket Kendaraan");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel2);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(55, 89, 165));
        jLabel3.setText("Tiket Wisata");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel3);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(55, 89, 165));
        jLabel4.setText("Tiket Hotel");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel4);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(55, 89, 165));
        jLabel5.setText("Histori");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });
        jPanel3.add(jLabel5);

        Logout.setBackground(new java.awt.Color(55, 89, 165));
        Logout.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Logout.setForeground(new java.awt.Color(255, 255, 255));
        Logout.setText("Logout");
        Logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout NavbarLayout = new javax.swing.GroupLayout(Navbar);
        Navbar.setLayout(NavbarLayout);
        NavbarLayout.setHorizontalGroup(
            NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavbarLayout.createSequentialGroup()
                .addGap(108, 108, 108)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 329, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Logout)
                .addGap(122, 122, 122))
        );
        NavbarLayout.setVerticalGroup(
            NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NavbarLayout.createSequentialGroup()
                .addGroup(NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(NavbarLayout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel1))
                    .addGroup(NavbarLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(NavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Logout))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        HomePanel.add(Navbar, java.awt.BorderLayout.PAGE_START);

        KontenUtama.setBackground(new java.awt.Color(204, 204, 204));
        KontenUtama.setLayout(new java.awt.CardLayout());

        PesanKendaraanPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255, 170));

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(55, 89, 165));
        jLabel10.setText("Pemesanan Tiket Kendaraan");

        CBJenisKendaraan_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CBJenisKendaraan_TK.setForeground(new java.awt.Color(0, 0, 0));
        CBJenisKendaraan_TK.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Jenis Kendaraan---", "Pesawat", "Bis", "Kapal" }));
        CBJenisKendaraan_TK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBJenisKendaraan_TKItemStateChanged(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(55, 89, 165));
        jLabel11.setText("Jenis Kendaraan");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(55, 89, 165));
        jLabel12.setText("Tempat Asal");

        CBTempatTujuan_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CBTempatTujuan_TK.setForeground(new java.awt.Color(0, 0, 0));
        CBTempatTujuan_TK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBTempatTujuan_TKItemStateChanged(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(55, 89, 165));
        jLabel13.setText("Tempat Tujuan");

        Waktu_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Waktu_TK.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1732146411308L), null, null, java.util.Calendar.DAY_OF_MONTH));

        jLabel25.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(55, 89, 165));
        jLabel25.setText("Waktu");

        jLabel26.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(55, 89, 165));
        jLabel26.setText("Jumlah Tiket");

        Jumlah_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Jumlah_TK.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        HargaTiket_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        HargaTiket_TK.setForeground(new java.awt.Color(0, 0, 0));

        jLabel35.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(55, 89, 165));
        jLabel35.setText("Harga Tiket");

        Pesan_TK.setBackground(new java.awt.Color(55, 89, 165));
        Pesan_TK.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Pesan_TK.setForeground(new java.awt.Color(255, 255, 255));
        Pesan_TK.setText("Pesan");
        Pesan_TK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pesan_TKActionPerformed(evt);
            }
        });

        errCBJenisKendaraan_TK.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBJenisKendaraan_TK.setForeground(new java.awt.Color(255, 0, 0));

        errCBTempatAsal_TK.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBTempatAsal_TK.setForeground(new java.awt.Color(255, 0, 0));

        CBTempatAsal_TK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CBTempatAsal_TK.setForeground(new java.awt.Color(0, 0, 0));
        CBTempatAsal_TK.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBTempatAsal_TKItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(95, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(CBJenisKendaraan_TK, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(CBTempatAsal_TK, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errCBTempatAsal_TK)
                            .addComponent(errCBJenisKendaraan_TK)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel35, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel26, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel25))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(Pesan_TK)
                            .addComponent(HargaTiket_TK)
                            .addComponent(CBTempatTujuan_TK, 0, 446, Short.MAX_VALUE)
                            .addComponent(Jumlah_TK)
                            .addComponent(Waktu_TK))))
                .addGap(120, 120, 120))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(jLabel10)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel12, jLabel13, jLabel25, jLabel26, jLabel35});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel10)
                .addGap(34, 34, 34)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(CBJenisKendaraan_TK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errCBJenisKendaraan_TK, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBTempatAsal_TK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errCBTempatAsal_TK, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBTempatTujuan_TK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(HargaTiket_TK, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Waktu_TK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(26, 26, 26)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jumlah_TK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26))
                .addGap(36, 36, 36)
                .addComponent(Pesan_TK)
                .addContainerGap(48, Short.MAX_VALUE))
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CBJenisKendaraan_TK, CBTempatTujuan_TK, HargaTiket_TK, Jumlah_TK, Waktu_TK});

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel11, jLabel12, jLabel13, jLabel25, jLabel26, jLabel35});

        PesanKendaraanPanel.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 820, 530));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N
        PesanKendaraanPanel.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1310, 700));

        KontenUtama.add(PesanKendaraanPanel, "card2");

        PesanWisataPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(255, 255, 255, 170));

        Pesan_TW.setBackground(new java.awt.Color(55, 89, 165));
        Pesan_TW.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Pesan_TW.setForeground(new java.awt.Color(255, 255, 255));
        Pesan_TW.setText("Pesan");
        Pesan_TW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pesan_TWActionPerformed(evt);
            }
        });

        HargaTiket_TW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        jLabel36.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(55, 89, 165));
        jLabel36.setText("Harga Tiket");

        jLabel28.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel28.setForeground(new java.awt.Color(55, 89, 165));
        jLabel28.setText("Jumlah Tiket");

        Jumlah_TW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Jumlah_TW.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        Waktu_TW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        Waktu_TW.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1732146497292L), null, null, java.util.Calendar.DAY_OF_MONTH));

        jLabel27.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(55, 89, 165));
        jLabel27.setText("Waktu");

        jLabel14.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(55, 89, 165));
        jLabel14.setText("Pilih Wisata");

        CBPilihWisata_TW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CBPilihWisata_TW.setForeground(new java.awt.Color(0, 0, 0));
        CBPilihWisata_TW.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBPilihWisata_TWItemStateChanged(evt);
            }
        });

        CBPilihKota_TW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        CBPilihKota_TW.setForeground(new java.awt.Color(0, 0, 0));
        CBPilihKota_TW.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Kota---", "Badung", "Denpasar", "Gianyar", "Karang Asem", "Buleleng", "Jembrana" }));
        CBPilihKota_TW.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBPilihKota_TWItemStateChanged(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(55, 89, 165));
        jLabel15.setText("Pilih Kota");

        jLabel16.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(55, 89, 165));
        jLabel16.setText("Pemesanan Tempat Wisata");

        errCBPilihKota_TW.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBPilihKota_TW.setForeground(new java.awt.Color(255, 0, 0));

        errCBPilihWisata_TW.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBPilihWisata_TW.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(124, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Pesan_TW)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel14)
                                .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel27)
                                .addComponent(jLabel28))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(errCBPilihKota_TW)
                                .addComponent(errCBPilihWisata_TW)
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(Jumlah_TW, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Waktu_TW, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                                    .addComponent(HargaTiket_TW, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CBPilihWisata_TW, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addGap(139, 139, 139)
                            .addComponent(jLabel16))
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addComponent(jLabel15)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(CBPilihKota_TW, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(120, 120, 120))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel14, jLabel15, jLabel27, jLabel28, jLabel36});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel16)
                .addGap(34, 34, 34)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(CBPilihKota_TW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(errCBPilihKota_TW, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBPilihWisata_TW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(1, 1, 1)
                .addComponent(errCBPilihWisata_TW, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(HargaTiket_TW, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Waktu_TW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(26, 26, 26)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jumlah_TW, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addGap(36, 36, 36)
                .addComponent(Pesan_TW)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CBPilihKota_TW, CBPilihWisata_TW, HargaTiket_TW, Jumlah_TW, Waktu_TW});

        PesanWisataPanel.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 820, 470));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N
        PesanWisataPanel.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 700));

        KontenUtama.add(PesanWisataPanel, "card2");

        PesanHotelPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel6.setBackground(new java.awt.Color(255, 255, 255, 170));

        JenisKamarStandart.setBackground(new java.awt.Color(161, 190, 255));
        JenisKamarStandart.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JenisKamarStandart.setForeground(new java.awt.Color(0, 0, 0));
        JenisKamarStandart.setText("Standart");
        JenisKamarStandart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisKamarStandartActionPerformed(evt);
            }
        });

        jLabel37.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(55, 89, 165));
        jLabel37.setText("Total Harga");

        JenisKamarDeluxe.setBackground(new java.awt.Color(161, 190, 255));
        JenisKamarDeluxe.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JenisKamarDeluxe.setForeground(new java.awt.Color(0, 0, 0));
        JenisKamarDeluxe.setText("Deluxe");
        JenisKamarDeluxe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisKamarDeluxeActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(55, 89, 165));
        jLabel17.setText("Pemesanan Tempat Inap");

        JenisKamarSuite.setBackground(new java.awt.Color(161, 190, 255));
        JenisKamarSuite.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JenisKamarSuite.setForeground(new java.awt.Color(0, 0, 0));
        JenisKamarSuite.setText("Suite");
        JenisKamarSuite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JenisKamarSuiteActionPerformed(evt);
            }
        });

        Pesan_TI.setBackground(new java.awt.Color(55, 89, 165));
        Pesan_TI.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Pesan_TI.setForeground(new java.awt.Color(255, 255, 255));
        Pesan_TI.setText("Pesan");
        Pesan_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Pesan_TIActionPerformed(evt);
            }
        });

        JumlahKamarDeluxe.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JumlahKamarDeluxe.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        JumlahKamarDeluxe.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                JumlahKamarDeluxeStateChanged(evt);
            }
        });

        jLabel31.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(55, 89, 165));
        jLabel31.setText("Tanggal Cekin");

        JumlahKamarSuite.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JumlahKamarSuite.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        JumlahKamarSuite.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                JumlahKamarSuiteStateChanged(evt);
            }
        });

        TglCekin_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        TglCekin_TI.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1732146518932L), null, null, java.util.Calendar.DAY_OF_MONTH));
        TglCekin_TI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TglCekin_TIKeyReleased(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(55, 89, 165));
        jLabel18.setText("Pilih Kota");

        TglCekout_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        TglCekout_TI.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(1732146518932L), null, null, java.util.Calendar.DAY_OF_MONTH));
        TglCekout_TI.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TglCekout_TIKeyReleased(evt);
            }
        });

        CBPilihKota_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        CBPilihKota_TI.setForeground(new java.awt.Color(0, 0, 0));
        CBPilihKota_TI.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Kota---", "Badung", "Denpasar", "Gianyar", "Karang Asem", "Buleleng", "Jembrana" }));
        CBPilihKota_TI.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBPilihKota_TIItemStateChanged(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(55, 89, 165));
        jLabel32.setText("Tanggal Cekout");

        CBPilihHotel_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        CBPilihHotel_TI.setForeground(new java.awt.Color(0, 0, 0));
        CBPilihHotel_TI.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBPilihHotel_TIItemStateChanged(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(55, 89, 165));
        jLabel33.setText("Jenis Kamar");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(55, 89, 165));
        jLabel19.setText("Pilih Hotel");

        jLabel34.setFont(new java.awt.Font("Dialog", 1, 16)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(55, 89, 165));
        jLabel34.setText("Jumlah Kamar");

        Hitung_TI.setBackground(new java.awt.Color(55, 89, 165));
        Hitung_TI.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        Hitung_TI.setForeground(new java.awt.Color(255, 255, 255));
        Hitung_TI.setText("Hitung");
        Hitung_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Hitung_TIActionPerformed(evt);
            }
        });

        JumlahKamarStandart.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        JumlahKamarStandart.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        JumlahKamarStandart.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                JumlahKamarStandartStateChanged(evt);
            }
        });

        TotalHarga_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        TotalHarga_TI.setForeground(new java.awt.Color(0, 0, 0));

        CekKetersediaan_TI.setBackground(new java.awt.Color(55, 89, 165));
        CekKetersediaan_TI.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        CekKetersediaan_TI.setForeground(new java.awt.Color(255, 255, 255));
        CekKetersediaan_TI.setText("Cek");
        CekKetersediaan_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CekKetersediaan_TIActionPerformed(evt);
            }
        });

        errCBPilihKota_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBPilihKota_TI.setForeground(new java.awt.Color(255, 0, 0));

        errCBPilihHotel_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        errCBPilihHotel_TI.setForeground(new java.awt.Color(255, 0, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(CekKetersediaan_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addGap(161, 161, 161)
                                        .addComponent(jLabel17))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel33)
                                            .addComponent(jLabel34))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(JumlahKamarStandart)
                                            .addComponent(JenisKamarStandart, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
                                        .addGap(6, 6, 6)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(JenisKamarDeluxe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(JumlahKamarDeluxe))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(JumlahKamarSuite, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(JenisKamarSuite))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(TotalHarga_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 376, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Pesan_TI)
                                    .addComponent(Hitung_TI))
                                .addGap(100, 100, 100)))
                        .addGap(25, 25, 25))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel19))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(TglCekin_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel32)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(TglCekout_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(CBPilihHotel_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errCBPilihHotel_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(errCBPilihKota_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(CBPilihKota_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(119, Short.MAX_VALUE))))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel18, jLabel19, jLabel31});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jLabel17)
                .addGap(34, 34, 34)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(CBPilihKota_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addComponent(errCBPilihKota_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CBPilihHotel_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addGap(0, 0, 0)
                .addComponent(errCBPilihHotel_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel32)
                    .addComponent(TglCekin_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(TglCekout_TI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(CekKetersediaan_TI)
                .addGap(34, 34, 34)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel33)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel34))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JenisKamarStandart)
                            .addComponent(JenisKamarDeluxe)
                            .addComponent(JenisKamarSuite))
                        .addGap(0, 0, 0)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(JumlahKamarSuite, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JumlahKamarDeluxe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(JumlahKamarStandart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(26, 26, 26)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TotalHarga_TI, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel37)
                    .addComponent(Hitung_TI))
                .addGap(36, 36, 36)
                .addComponent(Pesan_TI)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel18, jLabel19, jLabel31, jLabel32});

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CBPilihHotel_TI, CBPilihKota_TI, JenisKamarDeluxe, JenisKamarStandart, JenisKamarSuite, JumlahKamarDeluxe, JumlahKamarStandart, JumlahKamarSuite, TglCekin_TI, TglCekout_TI});

        PesanHotelPanel.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 60, 820, 530));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N
        PesanHotelPanel.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1270, 700));

        KontenUtama.add(PesanHotelPanel, "card2");

        HistoriPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel7.setBackground(new java.awt.Color(255, 255, 255, 170));

        jTabbedPane1.setBackground(new java.awt.Color(161, 190, 255));
        jTabbedPane1.setForeground(new java.awt.Color(51, 51, 51));

        jPanel8.setBackground(new java.awt.Color(55, 89, 165));

        tbl_TK.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tbl_TK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Tempat Asal", "Tempat Tujuan", "Kendaraan", "Waktu Tiket", "Jumlah", "Total Harga", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_TK.setEnabled(false);
        tbl_TK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_TKMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(tbl_TK);
        if (tbl_TK.getColumnModel().getColumnCount() > 0) {
            tbl_TK.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TK.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TK.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TK.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TK.getColumnModel().getColumn(6).setMaxWidth(70);
            tbl_TK.getColumnModel().getColumn(8).setMaxWidth(70);
        }

        edit_TK.setBackground(new java.awt.Color(255, 255, 255));
        edit_TK.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        edit_TK.setForeground(new java.awt.Color(55, 89, 165));
        edit_TK.setText("Edit");
        edit_TK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_TKActionPerformed(evt);
            }
        });

        batalPesan_TK.setBackground(new java.awt.Color(255, 255, 255));
        batalPesan_TK.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        batalPesan_TK.setForeground(new java.awt.Color(55, 89, 165));
        batalPesan_TK.setText("Batal Pesan");
        batalPesan_TK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalPesan_TKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(batalPesan_TK)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edit_TK)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_TK)
                    .addComponent(batalPesan_TK))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tiket Kendaraan", jPanel8);

        jPanel9.setBackground(new java.awt.Color(55, 89, 165));

        edit_TW.setBackground(new java.awt.Color(255, 255, 255));
        edit_TW.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        edit_TW.setForeground(new java.awt.Color(55, 89, 165));
        edit_TW.setText("Edit");
        edit_TW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_TWActionPerformed(evt);
            }
        });

        tbl_TW.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tbl_TW.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Tempat Wisata", "Waktu Tiket", "Jumlah", "Total Harga", "Status"
            }
        ));
        tbl_TW.setEnabled(false);
        tbl_TW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_TWMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbl_TW);
        if (tbl_TW.getColumnModel().getColumnCount() > 0) {
            tbl_TW.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TW.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TW.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TW.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TW.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        batalPesan_TW.setBackground(new java.awt.Color(255, 255, 255));
        batalPesan_TW.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        batalPesan_TW.setForeground(new java.awt.Color(55, 89, 165));
        batalPesan_TW.setText("Batal Pesan");
        batalPesan_TW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalPesan_TWActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1060, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(batalPesan_TW)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(edit_TW)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(edit_TW)
                    .addComponent(batalPesan_TW))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tempat Wisata", jPanel9);

        jPanel10.setBackground(new java.awt.Color(55, 89, 165));
        jPanel10.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DetailPesananKamar.setBackground(new java.awt.Color(161, 190, 255));
        DetailPesananKamar.setClosable(true);
        DetailPesananKamar.setVisible(false);

        jScrollPane3.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane3.setForeground(new java.awt.Color(51, 51, 51));

        TADetail_TI.setBackground(new java.awt.Color(255, 255, 255));
        TADetail_TI.setColumns(20);
        TADetail_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        TADetail_TI.setForeground(new java.awt.Color(51, 51, 51));
        TADetail_TI.setLineWrap(true);
        TADetail_TI.setRows(5);
        TADetail_TI.setFocusable(false);
        TADetail_TI.setVerifyInputWhenFocusTarget(false);
        jScrollPane3.setViewportView(TADetail_TI);

        javax.swing.GroupLayout DetailPesananKamarLayout = new javax.swing.GroupLayout(DetailPesananKamar.getContentPane());
        DetailPesananKamar.getContentPane().setLayout(DetailPesananKamarLayout);
        DetailPesananKamarLayout.setHorizontalGroup(
            DetailPesananKamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailPesananKamarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );
        DetailPesananKamarLayout.setVerticalGroup(
            DetailPesananKamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailPesananKamarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel10.add(DetailPesananKamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, 280, 360));

        tbl_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        tbl_TI.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Hotel", "Tanggal Cekin", "Tanggal Cekout", "Total Harga", "Status"
            }
        ));
        tbl_TI.setEnabled(false);
        tbl_TI.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_TIMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_TI);
        if (tbl_TI.getColumnModel().getColumnCount() > 0) {
            tbl_TI.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TI.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TI.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TI.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TI.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        jPanel10.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 1060, 390));

        detail_TI.setBackground(new java.awt.Color(255, 255, 255));
        detail_TI.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        detail_TI.setForeground(new java.awt.Color(55, 89, 165));
        detail_TI.setText("Detail");
        detail_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                detail_TIActionPerformed(evt);
            }
        });
        jPanel10.add(detail_TI, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 0, -1, -1));

        edit_TI1.setBackground(new java.awt.Color(255, 255, 255));
        edit_TI1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        edit_TI1.setForeground(new java.awt.Color(55, 89, 165));
        edit_TI1.setText("Edit");
        edit_TI1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                edit_TI1ActionPerformed(evt);
            }
        });
        jPanel10.add(edit_TI1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1000, 0, -1, -1));

        batalPesan_TI.setBackground(new java.awt.Color(255, 255, 255));
        batalPesan_TI.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        batalPesan_TI.setForeground(new java.awt.Color(55, 89, 165));
        batalPesan_TI.setText("Batal Pesan");
        batalPesan_TI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                batalPesan_TIActionPerformed(evt);
            }
        });
        jPanel10.add(batalPesan_TI, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 0, -1, -1));

        jTabbedPane1.addTab("Tempat Inap", jPanel10);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(55, 89, 165));
        jLabel21.setText("Histori Pemesanan");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel21)
                .addGap(426, 426, 426))
            .addComponent(jTabbedPane1)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1))
        );

        HistoriPanel.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 1060, 510));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/background.jpg"))); // NOI18N
        HistoriPanel.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 700));

        KontenUtama.add(HistoriPanel, "card2");

        HomePanel.add(KontenUtama, java.awt.BorderLayout.CENTER);

        UserPage.add(HomePanel, java.awt.BorderLayout.PAGE_START);

        App.add(UserPage, "card4");

        AdminPage.setLayout(new java.awt.BorderLayout());

        DashboardPanel.setLayout(new java.awt.BorderLayout());

        Navbar1.setBackground(new java.awt.Color(161, 190, 255));

        jLabel44.setFont(new java.awt.Font("Dialog", 1, 36)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(55, 89, 165));
        jLabel44.setText("Database");

        out.setBackground(new java.awt.Color(55, 89, 165));
        out.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        out.setForeground(new java.awt.Color(255, 255, 255));
        out.setText("Logout");
        out.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                outActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Navbar1Layout = new javax.swing.GroupLayout(Navbar1);
        Navbar1.setLayout(Navbar1Layout);
        Navbar1Layout.setHorizontalGroup(
            Navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Navbar1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 948, Short.MAX_VALUE)
                .addComponent(out)
                .addGap(90, 90, 90))
        );
        Navbar1Layout.setVerticalGroup(
            Navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Navbar1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Navbar1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(out))
                .addContainerGap())
        );

        DashboardPanel.add(Navbar1, java.awt.BorderLayout.PAGE_START);

        Konten.setLayout(new javax.swing.BoxLayout(Konten, javax.swing.BoxLayout.LINE_AXIS));

        Sidebar.setBackground(new java.awt.Color(161, 190, 255));

        navDataTK.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        navDataTK.setForeground(new java.awt.Color(55, 89, 165));
        navDataTK.setText("Data Travel");
        navDataTK.setBorder(null);
        navDataTK.setBorderPainted(false);
        navDataTK.setContentAreaFilled(false);
        navDataTK.setFocusPainted(false);
        navDataTK.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navDataTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navDataTKActionPerformed(evt);
            }
        });

        navDataTW.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        navDataTW.setForeground(new java.awt.Color(55, 89, 165));
        navDataTW.setText("Data Wisata");
        navDataTW.setBorder(null);
        navDataTW.setBorderPainted(false);
        navDataTW.setContentAreaFilled(false);
        navDataTW.setFocusPainted(false);
        navDataTW.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navDataTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navDataTWActionPerformed(evt);
            }
        });

        navDataTH.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        navDataTH.setForeground(new java.awt.Color(55, 89, 165));
        navDataTH.setText("Data Hotel");
        navDataTH.setBorder(null);
        navDataTH.setBorderPainted(false);
        navDataTH.setContentAreaFilled(false);
        navDataTH.setFocusPainted(false);
        navDataTH.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navDataTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navDataTHActionPerformed(evt);
            }
        });

        navDataUser.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        navDataUser.setForeground(new java.awt.Color(55, 89, 165));
        navDataUser.setText("Data User");
        navDataUser.setBorder(null);
        navDataUser.setBorderPainted(false);
        navDataUser.setContentAreaFilled(false);
        navDataUser.setFocusPainted(false);
        navDataUser.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navDataUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navDataUserActionPerformed(evt);
            }
        });

        navDataTransaksi.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        navDataTransaksi.setForeground(new java.awt.Color(55, 89, 165));
        navDataTransaksi.setText("Data Transaksi");
        navDataTransaksi.setBorder(null);
        navDataTransaksi.setBorderPainted(false);
        navDataTransaksi.setContentAreaFilled(false);
        navDataTransaksi.setFocusPainted(false);
        navDataTransaksi.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        navDataTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                navDataTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout SidebarLayout = new javax.swing.GroupLayout(Sidebar);
        Sidebar.setLayout(SidebarLayout);
        SidebarLayout.setHorizontalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SidebarLayout.createSequentialGroup()
                .addContainerGap(36, Short.MAX_VALUE)
                .addGroup(SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(navDataUser, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(navDataTransaksi)
                    .addComponent(navDataTK, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(navDataTW)
                    .addComponent(navDataTH))
                .addGap(22, 22, 22))
        );

        SidebarLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {navDataTH, navDataTK, navDataTW});

        SidebarLayout.setVerticalGroup(
            SidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidebarLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(navDataUser)
                .addGap(18, 18, 18)
                .addComponent(navDataTransaksi)
                .addGap(18, 18, 18)
                .addComponent(navDataTK)
                .addGap(18, 18, 18)
                .addComponent(navDataTW)
                .addGap(18, 18, 18)
                .addComponent(navDataTH)
                .addContainerGap(484, Short.MAX_VALUE))
        );

        SidebarLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {navDataTH, navDataTK, navDataTW});

        Konten.add(Sidebar);

        KontenUtamaAdmin.setBackground(new java.awt.Color(230, 230, 230));
        KontenUtamaAdmin.setLayout(new java.awt.CardLayout());

        contentDataUser.setBackground(new java.awt.Color(230, 230, 230));

        jLabel79.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel79.setForeground(new java.awt.Color(55, 89, 165));
        jLabel79.setText("Data User");

        tbl_dataUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NO", "Nama", "Email", "No Telepon"
            }
        ));
        jScrollPane11.setViewportView(tbl_dataUser);
        if (tbl_dataUser.getColumnModel().getColumnCount() > 0) {
            tbl_dataUser.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_dataUser.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_dataUser.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_dataUser.getColumnModel().getColumn(1).setMaxWidth(35);
        }

        cariUser.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cariUser.setForeground(new java.awt.Color(0, 0, 0));

        cari_User.setBackground(new java.awt.Color(55, 89, 165));
        cari_User.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cari_User.setForeground(new java.awt.Color(255, 255, 255));
        cari_User.setText("Search");
        cari_User.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_UserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout contentDataUserLayout = new javax.swing.GroupLayout(contentDataUser);
        contentDataUser.setLayout(contentDataUserLayout);
        contentDataUserLayout.setHorizontalGroup(
            contentDataUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentDataUserLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel79)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cariUser, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cari_User)
                .addGap(14, 14, 14))
            .addGroup(contentDataUserLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 967, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        contentDataUserLayout.setVerticalGroup(
            contentDataUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentDataUserLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(contentDataUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel79)
                    .addComponent(cariUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cari_User))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 531, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        contentDataUserLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cariUser, cari_User});

        DataUser.setViewportView(contentDataUser);

        KontenUtamaAdmin.add(DataUser, "card3");

        contentDataTransaksi.setBackground(new java.awt.Color(230, 230, 230));

        jLabel78.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(55, 89, 165));
        jLabel78.setText("Data Transaksi");

        jTabbedPane2.setBackground(new java.awt.Color(255, 255, 255));
        jTabbedPane2.setForeground(new java.awt.Color(51, 51, 51));

        jPanel15.setBackground(new java.awt.Color(55, 89, 165));
        jPanel15.setLayout(new java.awt.BorderLayout());

        tbl_TKAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Email", "Tempat Asal", "Tempat Tujuan", "Kendaraan", "Waktu Tiket", "Jumlah", "Total Harga", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tbl_TKAdmin);
        if (tbl_TKAdmin.getColumnModel().getColumnCount() > 0) {
            tbl_TKAdmin.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TKAdmin.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TKAdmin.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TKAdmin.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TKAdmin.getColumnModel().getColumn(7).setMaxWidth(70);
            tbl_TKAdmin.getColumnModel().getColumn(9).setMaxWidth(70);
        }

        jPanel15.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        jTabbedPane2.addTab("Tiket Kendaraan", jPanel15);

        jPanel16.setBackground(new java.awt.Color(55, 89, 165));
        jPanel16.setLayout(new java.awt.BorderLayout());

        tbl_TWAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Email", "Tempat Wisata", "Waktu Tiket", "Jumlah", "Total Harga", "Status"
            }
        ));
        jScrollPane10.setViewportView(tbl_TWAdmin);
        if (tbl_TWAdmin.getColumnModel().getColumnCount() > 0) {
            tbl_TWAdmin.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TWAdmin.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TWAdmin.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TWAdmin.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TWAdmin.getColumnModel().getColumn(7).setMaxWidth(70);
        }

        jPanel16.add(jScrollPane10, java.awt.BorderLayout.CENTER);

        jTabbedPane2.addTab("Tempat Wisata", jPanel16);

        jPanel21.setBackground(new java.awt.Color(55, 89, 165));
        jPanel21.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        DetailTransaksiKamar.setBackground(new java.awt.Color(161, 190, 255));
        DetailTransaksiKamar.setClosable(true);
        DetailTransaksiKamar.setVisible(false);

        jScrollPane12.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane12.setForeground(new java.awt.Color(51, 51, 51));

        DetailTransaksi_TI.setBackground(new java.awt.Color(255, 255, 255));
        DetailTransaksi_TI.setColumns(20);
        DetailTransaksi_TI.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        DetailTransaksi_TI.setForeground(new java.awt.Color(51, 51, 51));
        DetailTransaksi_TI.setLineWrap(true);
        DetailTransaksi_TI.setRows(5);
        DetailTransaksi_TI.setFocusable(false);
        DetailTransaksi_TI.setVerifyInputWhenFocusTarget(false);
        jScrollPane12.setViewportView(DetailTransaksi_TI);

        javax.swing.GroupLayout DetailTransaksiKamarLayout = new javax.swing.GroupLayout(DetailTransaksiKamar.getContentPane());
        DetailTransaksiKamar.getContentPane().setLayout(DetailTransaksiKamarLayout);
        DetailTransaksiKamarLayout.setHorizontalGroup(
            DetailTransaksiKamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailTransaksiKamarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addContainerGap())
        );
        DetailTransaksiKamarLayout.setVerticalGroup(
            DetailTransaksiKamarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DetailTransaksiKamarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel21.add(DetailTransaksiKamar, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 20, 280, 390));

        tbl_TIAdmin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "No", "Email", "Hotel", "Tanggal Cekin", "Tanggal Cekout", "Total Harga", "Status", ""
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, false, true, true, true, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_TIAdmin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_TIAdminMouseClicked(evt);
            }
        });
        jScrollPane13.setViewportView(tbl_TIAdmin);
        if (tbl_TIAdmin.getColumnModel().getColumnCount() > 0) {
            tbl_TIAdmin.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_TIAdmin.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_TIAdmin.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_TIAdmin.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_TIAdmin.getColumnModel().getColumn(7).setMaxWidth(70);
            tbl_TIAdmin.getColumnModel().getColumn(8).setMaxWidth(70);
        }

        jPanel21.add(jScrollPane13, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 970, 500));

        jTabbedPane2.addTab("Tempat Inap", jPanel21);

        javax.swing.GroupLayout contentDataTransaksiLayout = new javax.swing.GroupLayout(contentDataTransaksi);
        contentDataTransaksi.setLayout(contentDataTransaksiLayout);
        contentDataTransaksiLayout.setHorizontalGroup(
            contentDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentDataTransaksiLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel78)
                .addContainerGap(861, Short.MAX_VALUE))
            .addGroup(contentDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentDataTransaksiLayout.createSequentialGroup()
                    .addGap(60, 60, 60)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 972, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        contentDataTransaksiLayout.setVerticalGroup(
            contentDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(contentDataTransaksiLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jLabel78)
                .addContainerGap(562, Short.MAX_VALUE))
            .addGroup(contentDataTransaksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(contentDataTransaksiLayout.createSequentialGroup()
                    .addGap(62, 62, 62)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        DataTransaksi.setViewportView(contentDataTransaksi);

        KontenUtamaAdmin.add(DataTransaksi, "card3");

        contentDataTiketKendaraan.setBackground(new java.awt.Color(230, 230, 230));
        contentDataTiketKendaraan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TKFormFrame.setBackground(new java.awt.Color(255, 255, 255));
        TKFormFrame.setClosable(true);
        TKFormFrame.setTitle("Form Tiket Kendaraan");
        TKFormFrame.setVisible(false);

        jPanel13.setBackground(new java.awt.Color(255, 255, 255));

        jLabel45.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(55, 89, 165));
        jLabel45.setText("Tempat Asal :");

        jLabel46.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(55, 89, 165));
        jLabel46.setText("Tempat Tujuan :");

        SubmitTK.setBackground(new java.awt.Color(55, 89, 165));
        SubmitTK.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        SubmitTK.setForeground(new java.awt.Color(255, 255, 255));
        SubmitTK.setText("Submit");
        SubmitTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitTKActionPerformed(evt);
            }
        });

        jLabel47.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(55, 89, 165));
        jLabel47.setText("Jenis Kendaraan :");

        jLabel48.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel48.setForeground(new java.awt.Color(55, 89, 165));
        jLabel48.setText("Harga");

        errAsalFormAdmin.setText(" ");

        errTujuanFormAdmin.setText(" ");

        errKendaraanFormAdmin.setText(" ");

        errHargaKFormAdmin.setText(" ");

        asalFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        id_tarifForm.setForeground(new java.awt.Color(255, 255, 255));

        kendaraanFormAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Jenis Kendaraan---", "Pesawat", "Bis", "Kapal" }));
        kendaraanFormAdmin.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                kendaraanFormAdminItemStateChanged(evt);
            }
        });

        hargaKFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addComponent(SubmitTK)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel47)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(kendaraanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(id_tarifForm)
                                .addGroup(jPanel13Layout.createSequentialGroup()
                                    .addComponent(jLabel45)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(errAsalFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(asalFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                                .addComponent(errTujuanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel48)
                                .addGap(18, 18, 18)
                                .addComponent(hargaKFormAdmin))
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(errHargaKFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(errKendaraanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel13Layout.createSequentialGroup()
                                        .addComponent(jLabel46)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tujuanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(54, 54, 54))))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel45, jLabel46, jLabel47, jLabel48});

        jPanel13Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {asalFormAdmin, kendaraanFormAdmin});

        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel45)
                    .addComponent(asalFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errAsalFormAdmin)
                .addGap(3, 3, 3)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel47)
                    .addComponent(kendaraanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(errTujuanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tujuanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errKendaraanFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel48)
                    .addComponent(hargaKFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errHargaKFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubmitTK)
                .addGap(114, 114, 114)
                .addComponent(id_tarifForm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel13Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {asalFormAdmin, kendaraanFormAdmin});

        TKFormFrame.getContentPane().add(jPanel13, java.awt.BorderLayout.CENTER);

        jPanel14.setBackground(new java.awt.Color(51, 51, 51));

        titleTKForm.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titleTKForm.setForeground(new java.awt.Color(55, 89, 165));
        jPanel14.add(titleTKForm);

        TKFormFrame.getContentPane().add(jPanel14, java.awt.BorderLayout.PAGE_START);

        contentDataTiketKendaraan.add(TKFormFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 410, 360));

        jLabel51.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(55, 89, 165));
        jLabel51.setText("Data Tiket Kendaraan");
        contentDataTiketKendaraan.add(jLabel51, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        tbl_dataTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NO", "Kota Asal", "Kota Tujuan", "Jenis Kendaraan", "Harga", "", ""
            }
        ));
        tbl_dataTK.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataTKMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_dataTK);
        if (tbl_dataTK.getColumnModel().getColumnCount() > 0) {
            tbl_dataTK.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_dataTK.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_dataTK.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_dataTK.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_dataTK.getColumnModel().getColumn(6).setMaxWidth(70);
            tbl_dataTK.getColumnModel().getColumn(7).setMaxWidth(70);
        }

        contentDataTiketKendaraan.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 90, 967, 500));

        addDataTK.setBackground(new java.awt.Color(55, 89, 165));
        addDataTK.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addDataTK.setForeground(new java.awt.Color(255, 255, 255));
        addDataTK.setText("Tambah");
        addDataTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDataTKActionPerformed(evt);
            }
        });
        contentDataTiketKendaraan.add(addDataTK, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        cari_TK.setBackground(new java.awt.Color(55, 89, 165));
        cari_TK.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cari_TK.setForeground(new java.awt.Color(255, 255, 255));
        cari_TK.setText("Search");
        cari_TK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_TKActionPerformed(evt);
            }
        });
        contentDataTiketKendaraan.add(cari_TK, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, -1, 30));

        cariJenisKendaraan.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cariJenisKendaraan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Jenis Kendaraan---", "Pesawat", "Bis", "Kapal" }));
        contentDataTiketKendaraan.add(cariJenisKendaraan, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 50, 160, 30));

        cariTempatTujuan.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        cariTempatTujuan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "---Pilih Tujuan---", "Badung", "Denpasar", "Gianyar", "Karang Asem", "Buleleng", "Jembrana" }));
        contentDataTiketKendaraan.add(cariTempatTujuan, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 50, 140, 30));

        cariTempatAsal.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        contentDataTiketKendaraan.add(cariTempatAsal, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 50, 140, 30));

        DataTiketKendaraan.setViewportView(contentDataTiketKendaraan);

        KontenUtamaAdmin.add(DataTiketKendaraan, "card3");

        contentDataTiketWisata.setBackground(new java.awt.Color(230, 230, 230));
        contentDataTiketWisata.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TWFormFrame.setBackground(new java.awt.Color(255, 255, 255));
        TWFormFrame.setClosable(true);
        TWFormFrame.setTitle("Form Tiket Wisata");
        TWFormFrame.setVisible(false);

        jPanel17.setBackground(new java.awt.Color(255, 255, 255));

        jLabel60.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel60.setForeground(new java.awt.Color(55, 89, 165));
        jLabel60.setText("Nama Wisata :");

        jLabel61.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel61.setForeground(new java.awt.Color(55, 89, 165));
        jLabel61.setText("Kota :");

        SubmitTW.setBackground(new java.awt.Color(55, 89, 165));
        SubmitTW.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        SubmitTW.setForeground(new java.awt.Color(255, 255, 255));
        SubmitTW.setText("Submit");
        SubmitTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitTWActionPerformed(evt);
            }
        });

        jLabel62.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel62.setForeground(new java.awt.Color(55, 89, 165));
        jLabel62.setText("Harga :");

        errWisataFormAdmin.setText(" ");

        errKotaWFormAdmin.setText(" ");

        errHargaWFormAdmin.setText(" ");

        wisataFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        id_wisataForm.setForeground(new java.awt.Color(255, 255, 255));

        kotaWFormAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--- Pilih Kota ---", "Badung", "Denpasar", "Gianyar", "Karang Asem", "Buleleng", "Jembrana" }));

        hargaWFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addComponent(SubmitTW)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addComponent(errHargaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(id_wisataForm, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel17Layout.createSequentialGroup()
                                    .addComponent(jLabel60)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(errWisataFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(wisataFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))
                                .addGroup(jPanel17Layout.createSequentialGroup()
                                    .addComponent(jLabel62)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(hargaWFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE))
                                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                                        .addComponent(jLabel61)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(kotaWFormAdmin, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel17Layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(errKotaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(54, 54, 54))))
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel60, jLabel61, jLabel62});

        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel60)
                    .addComponent(wisataFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errWisataFormAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel61)
                    .addComponent(kotaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errKotaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel62)
                    .addComponent(hargaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errHargaWFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(SubmitTW)
                .addGap(144, 144, 144)
                .addComponent(id_wisataForm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel60, jLabel61, jLabel62});

        jPanel17Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {kotaWFormAdmin, wisataFormAdmin});

        TWFormFrame.getContentPane().add(jPanel17, java.awt.BorderLayout.CENTER);

        jPanel18.setBackground(new java.awt.Color(51, 51, 51));

        titleTWForm.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titleTWForm.setForeground(new java.awt.Color(55, 89, 165));
        jPanel18.add(titleTWForm);

        TWFormFrame.getContentPane().add(jPanel18, java.awt.BorderLayout.PAGE_START);

        contentDataTiketWisata.add(TWFormFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 410, 320));

        jLabel66.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(55, 89, 165));
        jLabel66.setText("Data Tiket Wisata");
        contentDataTiketWisata.add(jLabel66, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        tbl_dataTW.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NO", "Nama Wisata", "Kota", "Harga", "", ""
            }
        ));
        tbl_dataTW.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataTWMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tbl_dataTW);
        if (tbl_dataTW.getColumnModel().getColumnCount() > 0) {
            tbl_dataTW.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_dataTW.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_dataTW.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_dataTW.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_dataTW.getColumnModel().getColumn(5).setMaxWidth(70);
            tbl_dataTW.getColumnModel().getColumn(6).setMaxWidth(70);
        }

        contentDataTiketWisata.add(jScrollPane8, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 90, 967, 500));

        addDataTW.setBackground(new java.awt.Color(55, 89, 165));
        addDataTW.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addDataTW.setForeground(new java.awt.Color(255, 255, 255));
        addDataTW.setText("Tambah");
        addDataTW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDataTWActionPerformed(evt);
            }
        });
        contentDataTiketWisata.add(addDataTW, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        cari_TW.setBackground(new java.awt.Color(55, 89, 165));
        cari_TW.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cari_TW.setForeground(new java.awt.Color(255, 255, 255));
        cari_TW.setText("Search");
        cari_TW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_TWActionPerformed(evt);
            }
        });
        contentDataTiketWisata.add(cari_TW, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, -1, -1));

        cariTW.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cariTW.setForeground(new java.awt.Color(0, 0, 0));
        contentDataTiketWisata.add(cariTW, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 250, 30));

        DataTiketWisata.setViewportView(contentDataTiketWisata);

        KontenUtamaAdmin.add(DataTiketWisata, "card3");

        contentDataTiketHotel.setBackground(new java.awt.Color(230, 230, 230));
        contentDataTiketHotel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        THFormFrame.setBackground(new java.awt.Color(255, 255, 255));
        THFormFrame.setClosable(true);
        THFormFrame.setTitle("Form Tiket Hotel");
        THFormFrame.setVisible(false);

        jPanel19.setBackground(new java.awt.Color(255, 255, 255));

        jLabel67.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(55, 89, 165));
        jLabel67.setText("Nama Hotel :");

        jLabel68.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel68.setForeground(new java.awt.Color(55, 89, 165));
        jLabel68.setText("Kota :");

        SubmitTH.setBackground(new java.awt.Color(55, 89, 165));
        SubmitTH.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        SubmitTH.setForeground(new java.awt.Color(255, 255, 255));
        SubmitTH.setText("Submit");
        SubmitTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitTHActionPerformed(evt);
            }
        });

        jLabel69.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel69.setForeground(new java.awt.Color(55, 89, 165));
        jLabel69.setText("Jenis Kamar :");

        jLabel70.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(55, 89, 165));
        jLabel70.setText("Harga :");

        jLabel71.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(55, 89, 165));
        jLabel71.setText("Tersedia");

        errHotelFormAdmin.setText(" ");

        errKotaHFormAdmin.setText(" ");

        errJenisFormAdmin.setText(" ");

        errHargaHFormAdmin.setText(" ");

        errTersediaFormAdmin.setText(" ");

        hotelFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        jenisFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        id_hotelForm.setForeground(new java.awt.Color(255, 255, 255));

        kotaHFormAdmin.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Badung", "Denpasar", "Gianyar", "Karang Asem", "Buleleng", "Jembrana" }));

        hargaHFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        tersediaFormAdmin.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap(46, Short.MAX_VALUE)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addComponent(SubmitTH)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel19Layout.createSequentialGroup()
                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addComponent(jLabel68)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(kotaHFormAdmin, 0, 185, Short.MAX_VALUE))
                            .addComponent(errJenisFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel19Layout.createSequentialGroup()
                                .addComponent(jLabel70)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(errHargaHFormAdmin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(hargaHFormAdmin, javax.swing.GroupLayout.Alignment.TRAILING)))
                            .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel19Layout.createSequentialGroup()
                                        .addGap(110, 110, 110)
                                        .addComponent(errKotaHFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel19Layout.createSequentialGroup()
                                        .addComponent(jLabel69)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jenisFormAdmin))
                                    .addGroup(jPanel19Layout.createSequentialGroup()
                                        .addComponent(jLabel67)
                                        .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel19Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(errHotelFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel19Layout.createSequentialGroup()
                                                .addGap(24, 24, 24)
                                                .addComponent(hotelFormAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, 185, Short.MAX_VALUE)))))
                                .addGroup(jPanel19Layout.createSequentialGroup()
                                    .addComponent(errTersediaFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(1, 1, 1))
                                .addComponent(id_hotelForm, javax.swing.GroupLayout.Alignment.LEADING))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel19Layout.createSequentialGroup()
                                .addComponent(jLabel71)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tersediaFormAdmin)))
                        .addGap(54, 54, 54))))
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel67, jLabel68, jLabel69, jLabel70, jLabel71});

        jPanel19Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {hargaHFormAdmin, hotelFormAdmin, jenisFormAdmin, kotaHFormAdmin, tersediaFormAdmin});

        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel67)
                    .addComponent(hotelFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errHotelFormAdmin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel68)
                    .addComponent(kotaHFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errKotaHFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel69)
                    .addComponent(jenisFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errJenisFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel70)
                    .addComponent(hargaHFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errHargaHFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel71)
                    .addComponent(tersediaFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(errTersediaFormAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(SubmitTH)
                .addGap(60, 60, 60)
                .addComponent(id_hotelForm)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel19Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel67, jLabel68, jLabel69, jLabel70, jLabel71});

        jPanel19Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {hargaHFormAdmin, hotelFormAdmin, jenisFormAdmin, kotaHFormAdmin, tersediaFormAdmin});

        THFormFrame.getContentPane().add(jPanel19, java.awt.BorderLayout.CENTER);

        jPanel20.setBackground(new java.awt.Color(51, 51, 51));

        titleTHForm.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        titleTHForm.setForeground(new java.awt.Color(55, 89, 165));
        jPanel20.add(titleTHForm);

        THFormFrame.getContentPane().add(jPanel20, java.awt.BorderLayout.PAGE_START);

        contentDataTiketHotel.add(THFormFrame, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 0, 410, 410));

        jLabel73.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(55, 89, 165));
        jLabel73.setText("Data Tiket Hotel");
        contentDataTiketHotel.add(jLabel73, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 12, -1, -1));

        tbl_dataTH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "NO", "Nama Hotel", "Kota", "Jenis Kamar", "Harga", "Tersedia", "", ""
            }
        ));
        tbl_dataTH.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_dataTHMouseClicked(evt);
            }
        });
        jScrollPane9.setViewportView(tbl_dataTH);
        if (tbl_dataTH.getColumnModel().getColumnCount() > 0) {
            tbl_dataTH.getColumnModel().getColumn(0).setMinWidth(0);
            tbl_dataTH.getColumnModel().getColumn(0).setPreferredWidth(0);
            tbl_dataTH.getColumnModel().getColumn(0).setMaxWidth(0);
            tbl_dataTH.getColumnModel().getColumn(1).setMaxWidth(35);
            tbl_dataTH.getColumnModel().getColumn(5).setHeaderValue("Harga");
            tbl_dataTH.getColumnModel().getColumn(6).setHeaderValue("Tersedia");
            tbl_dataTH.getColumnModel().getColumn(7).setMaxWidth(70);
            tbl_dataTH.getColumnModel().getColumn(7).setHeaderValue("");
            tbl_dataTH.getColumnModel().getColumn(8).setMaxWidth(70);
            tbl_dataTH.getColumnModel().getColumn(8).setHeaderValue("");
        }

        contentDataTiketHotel.add(jScrollPane9, new org.netbeans.lib.awtextra.AbsoluteConstraints(61, 90, 967, 500));

        addDataTH.setBackground(new java.awt.Color(55, 89, 165));
        addDataTH.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        addDataTH.setForeground(new java.awt.Color(255, 255, 255));
        addDataTH.setText("Tambah");
        addDataTH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addDataTHActionPerformed(evt);
            }
        });
        contentDataTiketHotel.add(addDataTH, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 50, -1, -1));

        cari_TH.setBackground(new java.awt.Color(55, 89, 165));
        cari_TH.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        cari_TH.setForeground(new java.awt.Color(255, 255, 255));
        cari_TH.setText("Search");
        cari_TH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cari_THActionPerformed(evt);
            }
        });
        contentDataTiketHotel.add(cari_TH, new org.netbeans.lib.awtextra.AbsoluteConstraints(950, 50, -1, -1));

        cariTH.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cariTH.setForeground(new java.awt.Color(0, 0, 0));
        contentDataTiketHotel.add(cariTH, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 50, 250, 30));

        DataTiketHotel.setViewportView(contentDataTiketHotel);

        KontenUtamaAdmin.add(DataTiketHotel, "card3");

        Konten.add(KontenUtamaAdmin);

        DashboardPanel.add(Konten, java.awt.BorderLayout.CENTER);

        AdminPage.add(DashboardPanel, java.awt.BorderLayout.CENTER);

        App.add(AdminPage, "card5");

        getContentPane().add(App, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void setFormTanggal() {
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(new Date());
        Date minDate = calendar.getTime();
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        Date dateStart = calendar.getTime();
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        Date minDateCekout = calendar.getTime();

        SpinnerDateModel model1 = new SpinnerDateModel(dateStart, minDate, null, Calendar.DAY_OF_MONTH);
        SpinnerDateModel model2 = new SpinnerDateModel(dateStart, minDate, null, Calendar.DAY_OF_MONTH);
        SpinnerDateModel model3 = new SpinnerDateModel(dateStart, minDate, null, Calendar.DAY_OF_MONTH);
        SpinnerDateModel model4 = new SpinnerDateModel(minDateCekout, dateStart, null, Calendar.DAY_OF_MONTH);

        Waktu_TK.setModel(model1);
        Waktu_TW.setModel(model2);
        TglCekin_TI.setModel(model3);
        TglCekout_TI.setModel(model4);

        Waktu_TK.setEditor(new JSpinner.DateEditor(Waktu_TK, "dd-MM-yyyy"));
        Waktu_TW.setEditor(new JSpinner.DateEditor(Waktu_TW, "dd-MM-yyyy"));
        TglCekin_TI.setEditor(new JSpinner.DateEditor(TglCekin_TI, "dd-MM-yyyy"));
        TglCekout_TI.setEditor(new JSpinner.DateEditor(TglCekout_TI, "dd-MM-yyyy"));
    }
    
//    Login/Register
    private void resetForm_LoginRegister() {
        emailLogin.setText("");
        passwordLogin.setText("");
        
        namaRegister.setText("");
        emailRegister.setText("");
        passwordRegister.setText("");
        no_telpRegister.setText("");
    }
   
    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        String email = emailLogin.getText();
        String pass = passwordLogin.getText();
        
        errEmailLogin.setText((email.isEmpty()) ? "* Email kosong" : "");
        errPasswordLogin.setText((email.isEmpty()) ? "* Password kosong" : "");
        ((CardLayout) App.getLayout()).show(App, "RegisterPanel");
        ((CardLayout) App.getLayout()).show(App, "LoginPanel");
        if (errEmailLogin.getText().isEmpty() && errPasswordLogin.getText().isEmpty()) {
            User hasil = User.getUserLogin(email);
            if (hasil != null && hasil.getPassword().equals(pass)) {
                userLogin = hasil;
                if (hasil.getRole().equals("user")) {
                    ((CardLayout) App.getLayout()).show(App, "UserPage");
                    jLabel2.setForeground(Color.BLACK);
                    if (userLogin != null) {    
                        readHistory_TK();
                        readHistory_TW();
                        readHistory_TI();
                    } 
                } else {
                    ((CardLayout) App.getLayout()).show(App, "AdminPage");
                    navDataUser.setForeground(Color.BLACK);
                    if (userLogin != null) {   
                        listUser(false);
                        listTK(false);
                        listTW(false);
                        listTH(false);
                    } 
                }
                resetForm_LoginRegister();
            } else {
                JOptionPane.showMessageDialog(null, "Login Gagal");
            }
        }
    }//GEN-LAST:event_LoginActionPerformed
    private void pindahRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pindahRegisterActionPerformed
        ((CardLayout) App.getLayout()).show(App, "RegisterPanel");
        resetForm_LoginRegister();
    }//GEN-LAST:event_pindahRegisterActionPerformed
    private void RegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterActionPerformed
        String nama = namaRegister.getText();
        String email = emailRegister.getText();
        String pass = passwordRegister.getText();
        String no_telp = no_telpRegister.getText();
        
        errNamaRegister.setText((nama.isEmpty()) ? "* Nama tidak boleh kosong" : "");
        if (email.isEmpty()) {
            errEmailRegister.setText("* Email tidak boleh kosong");
        } else {
            if (!email.matches("^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$")) {
                errEmailRegister.setText("* Format Email salah");
            } else {
                User hasil = User.getUserLogin(email);
                if (hasil == null) {
                    errEmailRegister.setText("");
                } else {
                    errEmailRegister.setText("* Email sudah ada");
                }
            }
        }
        errPasswordRegister.setText((pass.isEmpty()) ? "* Password tidak boleh kosong" : "");
        if (no_telp.isEmpty()) {
            errNohpRegister.setText("* No HP tidak boleh kosong");
        } else {
            if (!no_telp.matches("^08[0-9]{8,12}")) {
                errNohpRegister.setText("* Format No Hp salah");
            } else {
                errNohpRegister.setText("");
            }
        }
        ((CardLayout) App.getLayout()).show(App, "LoginPanel");
        ((CardLayout) App.getLayout()).show(App, "RegisterPanel");
        if (errNamaRegister.getText().isEmpty() && errEmailRegister.getText().isEmpty() && errPasswordRegister.getText().isEmpty() && errNohpRegister.getText().isEmpty()) {
            boolean hasil = User.addUser(nama, email, pass, no_telp);
            if (hasil) {
                JOptionPane.showMessageDialog(null, "Register Berhasil");
                ((CardLayout) App.getLayout()).show(App, "LoginPanel");
                resetForm_LoginRegister();
            } else {
                JOptionPane.showMessageDialog(null, "Register Gagal");
            }
        }
    }//GEN-LAST:event_RegisterActionPerformed
    private void pindahLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pindahLoginActionPerformed
        ((CardLayout) App.getLayout()).show(App, "LoginPanel");
        resetForm_LoginRegister();
    }//GEN-LAST:event_pindahLoginActionPerformed

//    User

//    Navigasi User
    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        resetForm_TK();
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanKendaraanPanel");
        jLabel2.setForeground(Color.BLACK);
        jLabel3.setForeground(new java.awt.Color(55,89,165));
        jLabel4.setForeground(new java.awt.Color(55,89,165));
        jLabel5.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_jLabel2MouseClicked
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        resetForm_TW();
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
        jLabel2.setForeground(new java.awt.Color(55,89,165));
        jLabel3.setForeground(Color.BLACK);
        jLabel4.setForeground(new java.awt.Color(55,89,165));
        jLabel5.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_jLabel3MouseClicked
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        resetForm_TI();
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanHotelPanel");
        jLabel2.setForeground(new java.awt.Color(55,89,165));
        jLabel3.setForeground(new java.awt.Color(55,89,165));
        jLabel4.setForeground(Color.BLACK);
        jLabel5.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_jLabel4MouseClicked
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "HistoriPemesananPanel");
        jLabel2.setForeground(new java.awt.Color(55,89,165));
        jLabel3.setForeground(new java.awt.Color(55,89,165));
        jLabel4.setForeground(new java.awt.Color(55,89,165));
        jLabel5.setForeground(Color.BLACK);
    }//GEN-LAST:event_jLabel5MouseClicked
    private void LogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutActionPerformed
        int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin Logout?", "Keluar", JOptionPane.YES_NO_OPTION);
        if (pilihan == JOptionPane.YES_OPTION) {
            userLogin = null;
            emailLogin.setText("");
            passwordLogin.setText("");
            namaRegister.setText("");
            emailRegister.setText("");
            passwordRegister.setText("");
            ((CardLayout) App.getLayout()).show(App, "LoginPanel");
            resetForm_LoginRegister();
        }
    }//GEN-LAST:event_LogoutActionPerformed
//    Tiket Kendaraan
    private void resetForm_TK() {
        CBJenisKendaraan_TK.setSelectedIndex(0);
        CBTempatAsal_TK.setSelectedIndex(0);
        CBTempatTujuan_TK.removeAllItems();
        setFormTanggal();
        Jumlah_TK.setValue(1);
        HargaTiket_TK.setText("");
        Pesan_TK.setText("Pesan");
        errCBJenisKendaraan_TK.setText("");
        errCBTempatAsal_TK.setText("");
    }

    private void CBJenisKendaraan_TKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBJenisKendaraan_TKItemStateChanged
        CBTempatTujuan_TK.removeAllItems();
        if (CBJenisKendaraan_TK.getSelectedItem().toString() == "Pesawat") {
            CBTempatTujuan_TK.addItem("Badung");
            errCBJenisKendaraan_TK.setText("");
        } else if (CBJenisKendaraan_TK.getSelectedItem().toString() == "Bis") {
            CBTempatTujuan_TK.addItem("Badung");
            CBTempatTujuan_TK.addItem("Denpasar");
            CBTempatTujuan_TK.addItem("Gianyar");
            CBTempatTujuan_TK.addItem("Karang Asem");
            CBTempatTujuan_TK.addItem("Buleleng");
            CBTempatTujuan_TK.addItem("Jembrana");
            errCBJenisKendaraan_TK.setText("");
        } else if (CBJenisKendaraan_TK.getSelectedItem().toString() == "Kapal") {
            CBTempatTujuan_TK.addItem("Denpasar");
            CBTempatTujuan_TK.addItem("Karang Asem");
            CBTempatTujuan_TK.addItem("Jembrana");
            errCBJenisKendaraan_TK.setText("");
        } else {
            CBTempatTujuan_TK.removeAllItems();
        }
    }//GEN-LAST:event_CBJenisKendaraan_TKItemStateChanged
    private void CBTempatAsal_TKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBTempatAsal_TKItemStateChanged
        if (CBJenisKendaraan_TK.getSelectedIndex() == 0 || CBTempatAsal_TK.getSelectedIndex() == 0 || CBTempatTujuan_TK.getItemCount() == 0) {
            HargaTiket_TK.setText("");
        } else {
            String jenis_kendaraan = CBJenisKendaraan_TK.getSelectedItem().toString();
            String tempat_asal = CBTempatAsal_TK.getSelectedItem().toString();
            String tempat_tujuan = CBTempatTujuan_TK.getSelectedItem().toString();
            Tarif_Rute tr = Tarif_Rute.getHargaTiket(tempat_asal, tempat_tujuan, jenis_kendaraan);
            HargaTiket_TK.setText(Integer.toString(tr.getHarga()));
            errCBTempatAsal_TK.setText("");
        }
    }//GEN-LAST:event_CBTempatAsal_TKItemStateChanged
    private void CBTempatTujuan_TKItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBTempatTujuan_TKItemStateChanged
        if (CBJenisKendaraan_TK.getSelectedIndex() == 0 || CBTempatAsal_TK.getSelectedIndex() == 0 || CBTempatTujuan_TK.getItemCount() == 0) {
            HargaTiket_TK.setText("");
        } else {
            String jenis_kendaraan = CBJenisKendaraan_TK.getSelectedItem().toString();
            String tempat_asal = CBTempatAsal_TK.getSelectedItem().toString();
            String tempat_tujuan = CBTempatTujuan_TK.getSelectedItem().toString();
            Tarif_Rute tr = Tarif_Rute.getHargaTiket(tempat_asal, tempat_tujuan, jenis_kendaraan);
            HargaTiket_TK.setText(Integer.toString(tr.getHarga()));
        }
    }//GEN-LAST:event_CBTempatTujuan_TKItemStateChanged
    private void Pesan_TKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pesan_TKActionPerformed
        if (CBJenisKendaraan_TK.getSelectedIndex() == 0 || CBTempatAsal_TK.getSelectedIndex() == 0 || CBTempatTujuan_TK.getItemCount() == 0) {
            errCBJenisKendaraan_TK.setText(CBJenisKendaraan_TK.getSelectedIndex() == 0 ? "* Anda belum memilih" : "");
            errCBTempatAsal_TK.setText(CBTempatAsal_TK.getSelectedIndex() == 0 ? "* Anda belum memilih" : "");
            ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
            ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanKendaraanPanel");
        } else {
            String jenis_kendaraan = CBJenisKendaraan_TK.getSelectedItem().toString();
            String tempat_asal = CBTempatAsal_TK.getSelectedItem().toString();
            String tempat_tujuan = CBTempatTujuan_TK.getSelectedItem().toString();
            Date waktu = (Date) Waktu_TK.getValue();
            int jumlah = (int) Jumlah_TK.getValue();
            int total = Integer.parseInt(HargaTiket_TK.getText());

            if (Pesan_TK.getText().equals("Edit")) {
                Tarif_Rute tarif_rute = Tarif_Rute.getHargaTiket(tempat_asal, tempat_tujuan, jenis_kendaraan);
                int id_tarif = tarif_rute.getId_tarif();
                boolean hasil = Tiket_Kendaraan.updateTK(DataEdit_TK.getId_tiket_kendaraan(), id_tarif, waktu, jumlah, total, userLogin.getId_user());
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Edit Pesanan Tiket Kendaraan Berhasil");
                    ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "HistoriPemesananPanel");
                    DataEdit_TK = null;
                } else {
                    JOptionPane.showMessageDialog(null, "Edit Pesanan Tiket Kendaraan Gagal");
                }
            } else {
                Tarif_Rute tarif_rute = Tarif_Rute.getHargaTiket(tempat_asal, tempat_tujuan, jenis_kendaraan);
                int id_tarif = tarif_rute.getId_tarif();
                boolean hasil = Tiket_Kendaraan.addTK(id_tarif , waktu, jumlah, total, userLogin.getId_user());
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Pemesanan Tiket Kendaraan Berhasil");
                } else {
                    JOptionPane.showMessageDialog(null, "Pemesanan Tiket Kendaraan Gagal");
                }
            }

            resetForm_TK();
            readHistory_TK();
        }
    }//GEN-LAST:event_Pesan_TKActionPerformed
//    Tiket Wisata 
    private void resetForm_TW() {
        CBPilihKota_TW.setSelectedIndex(0);
        CBPilihWisata_TW.removeAllItems();
        setFormTanggal();
        Jumlah_TW.setValue(1);
        HargaTiket_TW.setText("");
        Pesan_TW.setText("Pesan");
        errCBPilihKota_TW.setText("");
        errCBPilihWisata_TW.setText("");
    }

    private void Pesan_TWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pesan_TWActionPerformed
        if (CBPilihKota_TW.getSelectedIndex() == 0 || CBPilihWisata_TW.getItemCount() == 0) {
            errCBPilihKota_TW.setText(CBPilihKota_TW.getSelectedIndex() == 0 ? "* Anda belum memilih" : "");
            errCBPilihWisata_TW.setText(CBPilihWisata_TW.getItemCount() == 0 ? "* Anda belum memilih" : "");
            ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanKendaraanPanel");
            ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
        } else {
            String kota = CBPilihKota_TW.getSelectedItem().toString();
            String nama_wisata = CBPilihWisata_TW.getSelectedItem().toString();
            Date waktu = (Date) Waktu_TW.getValue();
            int jumlah = (int) Jumlah_TW.getValue();
            int total = Integer.parseInt(HargaTiket_TW.getText());

            if (Pesan_TW.getText().equals("Edit")) {
                Data_Wisata data_wisata = Data_Wisata.getHargaTiket(nama_wisata);
                int id_wisata = data_wisata.getId_wisata();
                boolean hasil = Tiket_Wisata.updateTW(DataEdit_TW.getId_tiket_wisata(), id_wisata , waktu, jumlah, total, userLogin.getId_user());
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Edit Pesanan Tiket WIsata Berhasil");
                    ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "HistoriPemesananPanel");
                    DataEdit_TW = null;
                } else {
                    JOptionPane.showMessageDialog(null, "Edit Pesanan Tiket WIsata Gagal");
                }
            } else {
                Data_Wisata data_wisata = Data_Wisata.getHargaTiket(nama_wisata);
                int id_wisata = data_wisata.getId_wisata();
                boolean hasil = Tiket_Wisata.addTW(id_wisata , waktu, jumlah, total, userLogin.getId_user());
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Pemesanan Tiket WIsata Berhasil");
                } else {
                    JOptionPane.showMessageDialog(null, "Pemesanan Tiket WIsata Gagal");
                }
            }
            resetForm_TW();
            readHistory_TW();
        }
    }//GEN-LAST:event_Pesan_TWActionPerformed
    private void CBPilihKota_TWItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBPilihKota_TWItemStateChanged
        CBPilihWisata_TW.removeAllItems();
        if (CBPilihKota_TW.getSelectedIndex() == 0) {  
            CBPilihWisata_TW.removeAllItems();
        } else {
            String kota = CBPilihKota_TW.getSelectedItem().toString();
            List<Data_Wisata> DW_List = Data_Wisata.getWisataByKota(kota);
            for (Data_Wisata DW : DW_List) {            
                CBPilihWisata_TW.addItem(DW.getNama_wisata());                
            }
            errCBPilihKota_TW.setText("");
        }
    }//GEN-LAST:event_CBPilihKota_TWItemStateChanged
    private void CBPilihWisata_TWItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBPilihWisata_TWItemStateChanged
        if (CBPilihKota_TW.getSelectedIndex() == 0 || CBPilihWisata_TW.getItemCount() == 0) {
            HargaTiket_TW.setText("");
        } else {
            String nama_wisata = CBPilihWisata_TW.getSelectedItem().toString();
            Data_Wisata dw = Data_Wisata.getHargaTiket(nama_wisata);
            HargaTiket_TW.setText(Integer.toString(dw.getHarga()));
            errCBPilihWisata_TW.setText("");
        }
    }//GEN-LAST:event_CBPilihWisata_TWItemStateChanged
//    Tiket Hotel
    private void disabledJumlah() {
        if (JenisKamarStandart.isSelected()) {
            JumlahKamarStandart.setEnabled(true);
        } else {
            JumlahKamarStandart.setEnabled(false);
        }
        if (JenisKamarDeluxe.isSelected()) {
            JumlahKamarDeluxe.setEnabled(true);
        } else {
            JumlahKamarDeluxe.setEnabled(false);
        }
        if (JenisKamarSuite.isSelected()) {
            JumlahKamarSuite.setEnabled(true);
        } else {
            JumlahKamarSuite.setEnabled(false);
        }
        TotalHarga_TI.setText("");
        Pesan_TI.setEnabled(false);
    }
    private void resetPilihKamar() {
        JumlahKamarStandart.setValue(0);
        JumlahKamarDeluxe.setValue(0);
        JumlahKamarSuite.setValue(0);
        JumlahKamarStandart.setEnabled(false);
        JumlahKamarDeluxe.setEnabled(false);
        JumlahKamarSuite.setEnabled(false);
        JenisKamarStandart.setEnabled(false);
        JenisKamarDeluxe.setEnabled(false);
        JenisKamarSuite.setEnabled(false);
        
        TotalHarga_TI.setText("");
    }
    private void ListHotel() {
        CBPilihHotel_TI.removeAllItems();
        if (CBPilihKota_TI.getSelectedIndex() == 0) {  
//            JOptionPane.showConfirmDialog(null, "Anda belum memilih Kota", "Peringatan", JOptionPane.ERROR_MESSAGE);
        } else {
            String kota = CBPilihKota_TI.getSelectedItem().toString();
            List<Data_Hotel> DI_List = Data_Hotel.getHotelByKota(kota);
            for (Data_Hotel DI : DI_List) {            
                CBPilihHotel_TI.addItem(DI.getNama_hotel());                
            }
        }
    }
    private void resetForm_TI() {
        CBPilihKota_TI.setSelectedIndex(0);
        resetPilihKamar();
        setFormTanggal();
        errCBPilihKota_TI.setText("");
        errCBPilihHotel_TI.setText("");
    }

    private void JumlahKamarStandartStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_JumlahKamarStandartStateChanged
        Pesan_TI.setEnabled(false);
        TotalHarga_TI.setText("");
    }//GEN-LAST:event_JumlahKamarStandartStateChanged
    private void JumlahKamarDeluxeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_JumlahKamarDeluxeStateChanged
        Pesan_TI.setEnabled(false);
        TotalHarga_TI.setText("");
    }//GEN-LAST:event_JumlahKamarDeluxeStateChanged
    private void JumlahKamarSuiteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_JumlahKamarSuiteStateChanged
        Pesan_TI.setEnabled(false);
        TotalHarga_TI.setText("");
    }//GEN-LAST:event_JumlahKamarSuiteStateChanged
    private void JenisKamarStandartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisKamarStandartActionPerformed
        disabledJumlah();
    }//GEN-LAST:event_JenisKamarStandartActionPerformed
    private void JenisKamarDeluxeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisKamarDeluxeActionPerformed
        disabledJumlah();
    }//GEN-LAST:event_JenisKamarDeluxeActionPerformed
    private void JenisKamarSuiteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JenisKamarSuiteActionPerformed
        disabledJumlah();
    }//GEN-LAST:event_JenisKamarSuiteActionPerformed

    private void CBPilihKota_TIItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBPilihKota_TIItemStateChanged
        ListHotel();
        resetPilihKamar();
        errCBPilihKota_TI.setText("");
    }//GEN-LAST:event_CBPilihKota_TIItemStateChanged
    private void CBPilihHotel_TIItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBPilihHotel_TIItemStateChanged
        resetPilihKamar();
        errCBPilihHotel_TI.setText("");
    }//GEN-LAST:event_CBPilihHotel_TIItemStateChanged
    private void TglCekin_TIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TglCekin_TIKeyReleased
        resetPilihKamar();
        
        Date tglCekin = (Date) TglCekin_TI.getValue();
        
        Calendar calendar = Calendar.getInstance();
        calendar.setTime(tglCekin);
        calendar.add(Calendar.DAY_OF_MONTH, 1);
        Date dateStart = calendar.getTime();

        SpinnerDateModel model1 = new SpinnerDateModel(dateStart, tglCekin, null, Calendar.DAY_OF_MONTH);
        TglCekout_TI.setModel(model1);
        TglCekout_TI.setEditor(new JSpinner.DateEditor(TglCekout_TI, "dd-MM-yyyy"));
    }//GEN-LAST:event_TglCekin_TIKeyReleased
    private void TglCekout_TIKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TglCekout_TIKeyReleased
        resetPilihKamar();
    }//GEN-LAST:event_TglCekout_TIKeyReleased

    private void CekKetersediaan_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CekKetersediaan_TIActionPerformed
        if (CBPilihHotel_TI.getItemCount() == 0 || CBPilihKota_TI.getSelectedIndex() == 0) {
            errCBPilihKota_TI.setText(CBPilihKota_TI.getSelectedIndex() == 0 ? "Anda belum memilih" : "");
            errCBPilihHotel_TI.setText(CBPilihHotel_TI.getItemCount() == 0 ? "Anda belum memilih" : "");
        } else {
            String hotel = CBPilihHotel_TI.getSelectedItem().toString();
            Date tgl_cekin = (Date) TglCekin_TI.getValue();
            Date tgl_cekout = (Date) TglCekout_TI.getValue();

            Data_Hotel data_hotel1 = Data_Hotel.getHargaTiket(hotel, "standart");
            Data_Hotel data_hotel2 = Data_Hotel.getHargaTiket(hotel, "deluxe");
            Data_Hotel data_hotel3 = Data_Hotel.getHargaTiket(hotel, "suite");
            int standartTerpakai = 0;
            int deluxeTerpakai = 0;
            int suiteTerpakai = 0;
            if(Pesan_TI.getText().equals("Edit")) {
                standartTerpakai = Detail_Tiket_Hotel.cekKamarUpdate(data_hotel1, tgl_cekin, tgl_cekout, DataEdit_TI.getId_tiket_hotel());
                deluxeTerpakai = Detail_Tiket_Hotel.cekKamarUpdate(data_hotel2, tgl_cekin, tgl_cekout, DataEdit_TI.getId_tiket_hotel());
                suiteTerpakai = Detail_Tiket_Hotel.cekKamarUpdate(data_hotel3, tgl_cekin, tgl_cekout, DataEdit_TI.getId_tiket_hotel());
            } else {
                standartTerpakai = Detail_Tiket_Hotel.cekKamar(data_hotel1, tgl_cekin, tgl_cekout);
                deluxeTerpakai = Detail_Tiket_Hotel.cekKamar(data_hotel2, tgl_cekin, tgl_cekout);
                suiteTerpakai = Detail_Tiket_Hotel.cekKamar(data_hotel3, tgl_cekin, tgl_cekout);
            }
            JumlahKamarDeluxe.setModel(new javax.swing.SpinnerNumberModel((10-deluxeTerpakai), 1, (10-deluxeTerpakai), 1));
            JumlahKamarStandart.setModel(new javax.swing.SpinnerNumberModel((10-standartTerpakai), 1, (10-standartTerpakai), 1));
            JumlahKamarSuite.setModel(new javax.swing.SpinnerNumberModel((10-suiteTerpakai), 1, (10-suiteTerpakai), 1));

            JOptionPane.showMessageDialog(null,
                "Kamar Standart Sisa " + (10-standartTerpakai) + "\n" +
                "Kamar Deluxe Sisa " + (10-deluxeTerpakai) + "\n" +
                "Kamar Suite Sisa " + (10-suiteTerpakai) + "\n"
            );

            JenisKamarStandart.setEnabled(true);
            JenisKamarDeluxe.setEnabled(true);
            JenisKamarSuite.setEnabled(true);
            
            errCBPilihKota_TI.setText("");
            errCBPilihHotel_TI.setText("");
        }
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanHotelPanel");
    }//GEN-LAST:event_CekKetersediaan_TIActionPerformed
    private void Hitung_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Hitung_TIActionPerformed
        if (CBPilihHotel_TI.getItemCount() == 0 || CBPilihKota_TI.getSelectedIndex() == 0) {
            errCBPilihKota_TI.setText(CBPilihKota_TI.getSelectedIndex() == 0 ? "Anda belum memilih" : "");
            errCBPilihHotel_TI.setText(CBPilihHotel_TI.getItemCount() == 0 ? "Anda belum memilih" : "");
        } else {
            String hotel = CBPilihHotel_TI.getSelectedItem().toString();
            int total_semua = 0;
            int total_standart = 0;
            int total_deluxe = 0;
            int total_suite = 0;
            if (JenisKamarStandart.isSelected()) {
                int jumlah = (int) JumlahKamarStandart.getValue();
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "standart");
                total_standart = data_hotel.getHarga() * jumlah;
            }
            if (JenisKamarDeluxe.isSelected()) {
                int jumlah = (int) JumlahKamarDeluxe.getValue();
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "deluxe");
                total_deluxe = data_hotel.getHarga() * jumlah;
            }
            if (JenisKamarSuite.isSelected()) {
                int jumlah = (int) JumlahKamarSuite.getValue();
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "suite");
                total_suite = data_hotel.getHarga() * jumlah;
            }
            total_semua = total_standart + total_deluxe + total_suite;
            TotalHarga_TI.setText(Integer.toString(total_semua));
            Pesan_TI.setEnabled(true);
        }
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
        ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanHotelPanel");
    }//GEN-LAST:event_Hitung_TIActionPerformed
    private void Pesan_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Pesan_TIActionPerformed
        String hotel = CBPilihHotel_TI.getSelectedItem().toString();
        Date tgl_cekin = (Date) TglCekin_TI.getValue();
        Date tgl_cekout = (Date) TglCekout_TI.getValue();
        int total_semua = Integer.parseInt(TotalHarga_TI.getText());

        boolean hasil1 = false;
        if (Pesan_TI.getText().equals("Edit")) {
            hasil1 = Tiket_Hotel.updateTI(DataEdit_TI.getId_tiket_hotel(), tgl_cekin, tgl_cekout, total_semua, userLogin.getId_user());
        } else {
            hasil1 = Tiket_Hotel.addTI(tgl_cekin, tgl_cekout, total_semua, userLogin.getId_user());
        }
        if (hasil1) {
            boolean sukses = true;
            Tiket_Hotel data_tadi = Tiket_Hotel.getData(tgl_cekin, tgl_cekout, total_semua, userLogin.getId_user());
            if (Pesan_TI.getText().equals("Edit")) {
                Detail_Tiket_Hotel.deleteKIById_tiket_hotel(data_tadi.getId_tiket_hotel());
            }
            if (JenisKamarStandart.isSelected()) {
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "standart");
                boolean hasil2 = Detail_Tiket_Hotel.addKI(
                    data_tadi.getId_tiket_hotel(),
                    data_hotel.getId_hotel(),
                    (int) JumlahKamarStandart.getValue(),
                    (int) JumlahKamarStandart.getValue() * data_hotel.getHarga()
                );
                if (!hasil2) {
                    sukses = false;
                }
            }
            if (JenisKamarDeluxe.isSelected()) {
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "deluxe");
                boolean hasil2 = Detail_Tiket_Hotel.addKI(
                    data_tadi.getId_tiket_hotel(),
                    data_hotel.getId_hotel(),
                    (int) JumlahKamarDeluxe.getValue(),
                    (int) JumlahKamarDeluxe.getValue()* data_hotel.getHarga()
                );
                if (!hasil2) {
                    sukses = false;
                }
            }
            if (JenisKamarSuite.isSelected()) {
                Data_Hotel data_hotel = Data_Hotel.getHargaTiket(hotel, "suite");
                boolean hasil2 = Detail_Tiket_Hotel.addKI(
                    data_tadi.getId_tiket_hotel(),
                    data_hotel.getId_hotel(),
                    (int) JumlahKamarSuite.getValue(),
                    (int) JumlahKamarSuite.getValue() * data_hotel.getHarga()
                );
                if (!hasil2) {
                    sukses = false;
                }
            }

            if (sukses) {
                JOptionPane.showMessageDialog(null, "Pemesana Tiket Hotel Berhasil");
                if (Pesan_TI.getText().equals("Edit")) {
                    ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "HistoriPemesananPanel");
                    DataEdit_TI = null;
                }
            } else {
                JOptionPane.showMessageDialog(null, "Pemesana Tiket Hotel Gagal");
                Tiket_Hotel.deleteKI(data_tadi.getId_tiket_hotel());
            }
        } else {
            JOptionPane.showMessageDialog(null, "Pemesana Tiket Hotel Gagal");
        }

        resetForm_TI();
        readHistory_TI();
    }//GEN-LAST:event_Pesan_TIActionPerformed
//    Histori
    private void readHistory_TK() {
        List<Tiket_Kendaraan> list_TK = Tiket_Kendaraan.getAllDataByUser(userLogin.getId_user());
        DefaultTableModel model = (DefaultTableModel) tbl_TK.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Kendaraan TK : list_TK) {  
            Tarif_Rute tr = Tarif_Rute.getById(TK.getId_tarif());
            model.addRow(new Object[]{
                TK.getId_tiket_kendaraan(),
                no++,
                tr.getTempat_asal(),
                tr.getTempat_tujuan(),
                tr.getJenis_kendaraan(),
                outputFormatDatetime.format(TK.getWaktu()), 
                TK.getJumlah(),
                TK.getTotal_harga(),
                (TK.getStatus().equals(0)) ? "" : TK.getStatus()
            });
        }
        
        CBTempatAsal_TK.removeAllItems();
        List<Tarif_Rute> list_TempatAsal = Tarif_Rute.getAllTempatAsal();
            CBTempatAsal_TK.addItem("---Pilih Tempat Asal---");
        for (Tarif_Rute tr : list_TempatAsal) {
            CBTempatAsal_TK.addItem(tr.getTempat_asal());
        }
        CustomRenderer.customizeHeader(tbl_TK);
    }
    private void readHistory_TW() {
        List<Tiket_Wisata> list_TW = Tiket_Wisata.getAllDataByUser(userLogin.getId_user());
        DefaultTableModel model = (DefaultTableModel) tbl_TW.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Wisata TW : list_TW) {  
            Data_Wisata dw = Data_Wisata.getById(TW.getid_wisata());
            model.addRow(new Object[]{
                TW.getId_tiket_wisata(),
                no++,
                dw.getNama_wisata(),
                outputFormatDatetime.format(TW.getWaktu()), 
                TW.getJumlah(),
                TW.getTotal_harga(),
                (TW.getStatus().equals(0)) ? "" : TW.getStatus()
            });
        }
        CustomRenderer.customizeHeader(tbl_TW);
    }
    private void readHistory_TI() {
        List<Tiket_Hotel> list_TI = Tiket_Hotel.getAllDataByUser(userLogin.getId_user());
        DefaultTableModel model = (DefaultTableModel) tbl_TI.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Hotel TI : list_TI) {  
            List<Detail_Tiket_Hotel> list_dth = Detail_Tiket_Hotel.getById_tiket_hotel(TI.getId_tiket_hotel());
            String detail_pesan = "";
            String nama_hotel = "";
            for (Detail_Tiket_Hotel dth : list_dth) {
                Data_Hotel dh = Data_Hotel.getById(dth.getId_hotel());
                nama_hotel = dh.getNama_hotel();
                detail_pesan += " - Kamar " + dh.getJenis_kamar() + " " + dth.getJumlah() + "\n";
            }
            model.addRow(new Object[]{
                TI.getId_tiket_hotel(),
                no++,
                nama_hotel,
                outputFormatDatetime.format(TI.getTgl_cekin()), 
                outputFormatDatetime.format(TI.getTgl_cekout()),
                TI.getTotal_harga(),
                (TI.getStatus().equals(0)) ? "" : TI.getStatus()
            });
        }
        CustomRenderer.customizeHeader(tbl_TI);
        Pesan_TI.setEnabled(false);
    } 

    private void tbl_TKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_TKMouseClicked
        int row = tbl_TK.rowAtPoint(evt.getPoint());
        int id = (int) tbl_TK.getValueAt(row, 0);
        DataEdit_TK = Tiket_Kendaraan.getById(id);
    }//GEN-LAST:event_tbl_TKMouseClicked
    private void edit_TKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_TKActionPerformed
        if (DataEdit_TK == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TK.getWaktu();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanKendaraanPanel");
                Tarif_Rute tr = Tarif_Rute.getById(DataEdit_TK.getId_tarif());
                CBJenisKendaraan_TK.setSelectedItem(tr.getJenis_kendaraan());
                CBTempatAsal_TK.setSelectedItem(tr.getTempat_asal());
                CBTempatTujuan_TK.setSelectedItem(tr.getTempat_tujuan());
                Waktu_TK.setValue(DataEdit_TK.getWaktu());
                Jumlah_TK.setValue(DataEdit_TK.getJumlah());
                HargaTiket_TK.setText(Integer.toString(DataEdit_TK.getTotal_harga()));
                Pesan_TK.setText("Edit");
            } else {
                JOptionPane.showMessageDialog(null, "Data sudah tidak bisa diubah");
            }
        }
    }//GEN-LAST:event_edit_TKActionPerformed
    private void batalPesan_TKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalPesan_TKActionPerformed
        if (DataEdit_TK == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TK.getWaktu();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin melakukan Pembatalan?\nData tidak akan bisa berubah lagi setelah dibatalkan.", "Keluar", JOptionPane.YES_NO_OPTION);
                if (pilihan == JOptionPane.YES_OPTION) {
                    boolean hasil = Tiket_Kendaraan.batalTK(DataEdit_TK.getId_tiket_kendaraan());
                    if (hasil) {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Berhasil");
                        readHistory_TK();
                    } else {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Gagal");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Pembatalan hanya bisa dilakukan 12 jam sebelum Waktu Tiket");
            }
        }
    }//GEN-LAST:event_batalPesan_TKActionPerformed

    private void edit_TWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_TWActionPerformed
        if (DataEdit_TW == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TW.getWaktu();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanWisataPanel");
                Data_Wisata dw = Data_Wisata.getById(DataEdit_TW.getid_wisata());
                CBPilihKota_TW.setSelectedItem(dw.getKota());
                CBPilihWisata_TW.setSelectedItem(dw.getNama_wisata());
                Waktu_TW.setValue(DataEdit_TW.getWaktu());
                Jumlah_TW.setValue(DataEdit_TW.getJumlah());
                HargaTiket_TW.setText(Integer.toString(DataEdit_TW.getTotal_harga()));
                Pesan_TW.setText("Edit");
            } else {
                JOptionPane.showMessageDialog(null, "Data sudah tidak bisa diubah");
            }
        }
    }//GEN-LAST:event_edit_TWActionPerformed
    private void tbl_TWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_TWMouseClicked
        int row = tbl_TW.rowAtPoint(evt.getPoint());
        int id = (int) tbl_TW.getValueAt(row, 0);
        DataEdit_TW = Tiket_Wisata.getById(id);
    }//GEN-LAST:event_tbl_TWMouseClicked
    private void batalPesan_TWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalPesan_TWActionPerformed
        if (DataEdit_TW == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TW.getWaktu();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin melakukan Pembatalan?\nData tidak akan bisa berubah lagi setelah dibatalkan.", "Keluar", JOptionPane.YES_NO_OPTION);
                if (pilihan == JOptionPane.YES_OPTION) {
                    boolean hasil = Tiket_Wisata.batalTW(DataEdit_TW.getId_tiket_wisata());
                    if (hasil) {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Berhasil");
                        readHistory_TW();
                    } else {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Gagal");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Pembatalan hanya bisa dilakukan 12 jam sebelum Waktu Tiket");
            }
        }
    }//GEN-LAST:event_batalPesan_TWActionPerformed

    private void tbl_TIMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_TIMouseClicked
        int row = tbl_TI.rowAtPoint(evt.getPoint());
        int id = (int) tbl_TI.getValueAt(row, 0);
        DataEdit_TI = Tiket_Hotel.getById(id);
    }//GEN-LAST:event_tbl_TIMouseClicked
    private void detail_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_detail_TIActionPerformed
        if (DataEdit_TI == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            DetailPesananKamar.setVisible(true);

            String nama_kota = "";
            String nama_hotel = "";
            String list_kamar = "";
            List<Detail_Tiket_Hotel> dth_list = Detail_Tiket_Hotel.getById_tiket_hotel(DataEdit_TI.getId_tiket_hotel());
            for (Detail_Tiket_Hotel dth : dth_list) {
                Data_Hotel dh = Data_Hotel.getById(dth.getId_hotel());
                nama_kota = dh.getKota();
                nama_hotel = dh.getNama_hotel();
                list_kamar += "- Kamar" + dh.getJenis_kamar() + " | " + dth.getJumlah() + " | " + dth.getTotal_harga() + "\n";
            }
            TADetail_TI.setText(
                "Nama Hotel     : " + nama_hotel +
                "\nNama Kota      : " + nama_kota +
                "\nTanggal Cekin  : " + outputFormatDatetime.format(DataEdit_TI.getTgl_cekin()) +
                "\nTanggal Cekout : " + outputFormatDatetime.format(DataEdit_TI.getTgl_cekout()) +
                "\nDetail Pesanan : \n" + list_kamar +
                "Total Biaya    : " + DataEdit_TI.getTotal_harga()
            );
        }
    }//GEN-LAST:event_detail_TIActionPerformed
    private void edit_TI1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_edit_TI1ActionPerformed
        if (DataEdit_TI == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TI.getTgl_cekin();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                ((CardLayout) KontenUtama.getLayout()).show(KontenUtama, "PesanHotelPanel");
                TglCekin_TI.setValue(DataEdit_TI.getTgl_cekin());
                TglCekout_TI.setValue(DataEdit_TI.getTgl_cekout());

                String nama_kota = "";
                String nama_hotel = "";
                List<Detail_Tiket_Hotel> dth_list = Detail_Tiket_Hotel.getById_tiket_hotel(DataEdit_TI.getId_tiket_hotel());
                for (Detail_Tiket_Hotel dth : dth_list) {
                    Data_Hotel dh = Data_Hotel.getById(dth.getId_hotel());
                    nama_kota = dh.getKota();
                    nama_hotel = dh.getNama_hotel();
                }

                CBPilihKota_TI.setSelectedItem(nama_kota);
                ListHotel();
                CBPilihHotel_TI.setSelectedItem(nama_hotel);
                Pesan_TI.setText("Edit");
            } else {
                JOptionPane.showMessageDialog(null, "Data sudah tidak bisa diubah");
            }
        }
    }//GEN-LAST:event_edit_TI1ActionPerformed
    private void batalPesan_TIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_batalPesan_TIActionPerformed
        if (DataEdit_TI == null) {
            JOptionPane.showMessageDialog(null, "klik baris yang mau di edit");
        } else {
            Date tglCekin = DataEdit_TI.getTgl_cekin();
            LocalDateTime tglCekinLocal = tglCekin.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();
            LocalDateTime batasPembatalan = tglCekinLocal.minus(12, ChronoUnit.HOURS);
            LocalDateTime sekarang = LocalDateTime.now();

            if (sekarang.isBefore(batasPembatalan)) {
                int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin melakukan Pembatalan?\nData tidak akan bisa berubah lagi setelah dibatalkan.", "Keluar", JOptionPane.YES_NO_OPTION);
                if (pilihan == JOptionPane.YES_OPTION) {
                    boolean hasil = Tiket_Hotel.batalTI(DataEdit_TI.getId_tiket_hotel());
                    if (hasil) {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Berhasil");
                        readHistory_TI();
                    } else {
                        JOptionPane.showMessageDialog(null, "Pembatalan Tiket Gagal");
                    }
                }
            } else {
                JOptionPane.showMessageDialog(null, "Pembatalan hanya bisa dilakukan 12 jam sebelum Waktu Cekin");
            }
        }
    }//GEN-LAST:event_batalPesan_TIActionPerformed

//    Admin

//    Navigasi Admin
    private void outActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_outActionPerformed
        int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin Ingin Logout?", "Logout", JOptionPane.YES_NO_OPTION);
        if (pilihan == JOptionPane.YES_OPTION) {
            userLogin = null;
            emailLogin.setText("");
            passwordLogin.setText("");
            namaRegister.setText("");
            emailRegister.setText("");
            passwordRegister.setText("");
            ((CardLayout) App.getLayout()).show(App, "LoginPanel");
            resetForm_LoginRegister();
        }
    }//GEN-LAST:event_outActionPerformed
    private void navDataUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navDataUserActionPerformed
        ((CardLayout) KontenUtamaAdmin.getLayout()).show(KontenUtamaAdmin, "DataUser");
        navDataUser.setForeground(Color.BLACK);
        navDataTransaksi.setForeground(new java.awt.Color(55,89,165));
        navDataTK.setForeground(new java.awt.Color(55,89,165));
        navDataTW.setForeground(new java.awt.Color(55,89,165));
        navDataTH.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_navDataUserActionPerformed
    private void navDataTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navDataTransaksiActionPerformed
        readTransaksi_TK();
        readTransaksi_TW();
        readTransaksi_TI();
        ((CardLayout) KontenUtamaAdmin.getLayout()).show(KontenUtamaAdmin, "DataTransaksi");
        navDataUser.setForeground(new java.awt.Color(55,89,165));
        navDataTransaksi.setForeground(Color.BLACK);
        navDataTK.setForeground(new java.awt.Color(55,89,165));
        navDataTW.setForeground(new java.awt.Color(55,89,165));
        navDataTH.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_navDataTransaksiActionPerformed
    private void navDataTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navDataTKActionPerformed
        ((CardLayout) KontenUtamaAdmin.getLayout()).show(KontenUtamaAdmin, "DataTiketKendaraan");
        navDataUser.setForeground(new java.awt.Color(55,89,165));
        navDataTransaksi.setForeground(new java.awt.Color(55,89,165));
        navDataTK.setForeground(Color.BLACK);
        navDataTW.setForeground(new java.awt.Color(55,89,165));
        navDataTH.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_navDataTKActionPerformed
    private void navDataTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navDataTWActionPerformed
        ((CardLayout) KontenUtamaAdmin.getLayout()).show(KontenUtamaAdmin, "DataTiketWisata");
        navDataUser.setForeground(new java.awt.Color(55,89,165));
        navDataTransaksi.setForeground(new java.awt.Color(55,89,165));
        navDataTK.setForeground(new java.awt.Color(55,89,165));
        navDataTW.setForeground(Color.BLACK);
        navDataTH.setForeground(new java.awt.Color(55,89,165));
    }//GEN-LAST:event_navDataTWActionPerformed
    private void navDataTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_navDataTHActionPerformed
        ((CardLayout) KontenUtamaAdmin.getLayout()).show(KontenUtamaAdmin, "DataTiketHotel");
        navDataUser.setForeground(new java.awt.Color(55,89,165));
        navDataTransaksi.setForeground(new java.awt.Color(55,89,165));
        navDataTK.setForeground(new java.awt.Color(55,89,165));
        navDataTW.setForeground(new java.awt.Color(55,89,165));
        navDataTH.setForeground(Color.BLACK);
    }//GEN-LAST:event_navDataTHActionPerformed
//    User
    private void listUser(boolean cari) {
        List<User> list_U;
        if (cari) {
            String keyword = cariUser.getText();
            list_U = User.search(keyword);
        } else {
            list_U = User.getAll();
        }
        DefaultTableModel model = (DefaultTableModel) tbl_dataUser.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (User u : list_U) {
            model.addRow(new Object[]{
                u.getId_user(),
                no++,
                u.getNama(),
                u.getEmail(),
                u.getNo_telp()
            });
        }
        CustomRenderer.customizeHeader(tbl_dataUser);
    }
//    Tiket Kendaraan
    private void listTK(boolean cari) {
        List<Tarif_Rute> list;
        if (cari) {
            String tempat_asal = "-";
            String tempat_tujuan = "-";
            String jenis_kendaraan = "-";
            if (cariTempatAsal.getSelectedIndex() != 0) {
                tempat_asal = cariTempatAsal.getSelectedItem().toString();
            }
            if (cariTempatTujuan.getSelectedIndex() != 0) {
                tempat_tujuan = cariTempatTujuan.getSelectedItem().toString();
            }
            if (cariJenisKendaraan.getSelectedIndex() != 0) {
                jenis_kendaraan = cariJenisKendaraan.getSelectedItem().toString();
            }
            list = Tarif_Rute.search(tempat_asal, tempat_tujuan, jenis_kendaraan);
        } else {
            list = Tarif_Rute.getAll();
            cariTempatAsal.removeAllItems();
            List<Tarif_Rute> listTA = Tarif_Rute.getAllTempatAsal();
            cariTempatAsal.addItem("---Asal---");
            for (Tarif_Rute l : listTA) {            
                cariTempatAsal.addItem(l.getTempat_asal());
            }
            cariTempatTujuan.removeAllItems();
            List<Tarif_Rute> listTT = Tarif_Rute.getAllTempatTujuan();
            cariTempatTujuan.addItem("---Tujuan---");
            for (Tarif_Rute l : listTT) {            
                cariTempatTujuan.addItem(l.getTempat_tujuan());
            }
            cariJenisKendaraan.removeAllItems();
            List<Tarif_Rute> listJK = Tarif_Rute.getAllJenisKendaraan();
            cariJenisKendaraan.addItem("---Jenis Kendaraan---");
            for (Tarif_Rute l : listJK) {            
                cariJenisKendaraan.addItem(l.getJenis_kendaraan());
            }
        }
        DefaultTableModel model = (DefaultTableModel) tbl_dataTK.getModel();
        model.setRowCount(0);
        int no =1;
        for (Tarif_Rute l : list) {            
            model.addRow(new Object[]{
                l.getId_tarif(),
                no++,
                l.getTempat_asal(),
                l.getTempat_tujuan(),
                l.getJenis_kendaraan(),
                l.getHarga(),
                "Edit",
                "Hapus"
            });
        }
        tbl_dataTK.getColumnModel().getColumn(6).setCellRenderer(new CustomRenderer());
        tbl_dataTK.getColumnModel().getColumn(7).setCellRenderer(new CustomRenderer());
        CustomRenderer.customizeHeader(tbl_dataTK);

    }
    private void kendaraanFormAdminItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_kendaraanFormAdminItemStateChanged
        tujuanFormAdmin.removeAllItems();
        if (kendaraanFormAdmin.getSelectedItem().toString() == "Pesawat") {
            tujuanFormAdmin.addItem("Badung");
        } else if (kendaraanFormAdmin.getSelectedItem().toString() == "Bis") {
            tujuanFormAdmin.addItem("Badung");
            tujuanFormAdmin.addItem("Denpasar");
            tujuanFormAdmin.addItem("Gianyar");
            tujuanFormAdmin.addItem("Karang Asem");
            tujuanFormAdmin.addItem("Buleleng");
            tujuanFormAdmin.addItem("Jembrana");
        } else if (kendaraanFormAdmin.getSelectedItem().toString() == "Kapal") {
            tujuanFormAdmin.addItem("Denpasar");
            tujuanFormAdmin.addItem("Karang Asem");
            tujuanFormAdmin.addItem("Jembrana");
        }
    }//GEN-LAST:event_kendaraanFormAdminItemStateChanged
    private void SubmitTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitTKActionPerformed
        if (asalFormAdmin.getText().trim().isEmpty()) {
            errAsalFormAdmin.setText("* Tempat Asal tidak boleh kosong");
        } else {
            errAsalFormAdmin.setText("");
        }
        if (kendaraanFormAdmin.getSelectedIndex() == 0) {
            errKendaraanFormAdmin.setText("* Anda belum memilih");
        } else {
            errKendaraanFormAdmin.setText("");
        }
        if (hargaKFormAdmin.getText().trim().isEmpty()) {
            errHargaKFormAdmin.setText("* Harga tidak boleh kosong");
        } else {
            if (hargaKFormAdmin.getText().matches("^08[0-9]{8,12}")) {
                errHargaKFormAdmin.setText("* Inputkan angka saja");
            } else {
                if (Integer.parseInt(hargaKFormAdmin.getText()) < 0) {
                    errHargaKFormAdmin.setText("Tidak boleh mines");
                } else {
                    errHargaKFormAdmin.setText("");
                }
            }
        }
        
        if (errAsalFormAdmin.getText().trim().isEmpty() && errKendaraanFormAdmin.getText().trim().isEmpty() && errHargaKFormAdmin.getText().trim().isEmpty()) {
            String kota_asal = asalFormAdmin.getText();
            String kota_tujuan = tujuanFormAdmin.getSelectedItem().toString();
            String jenis_kendaraan = kendaraanFormAdmin.getSelectedItem().toString();
            int harga = Integer.parseInt(hargaKFormAdmin.getText());
            boolean hasil = false;
            if (titleTKForm.getText().equals("Tambah Data Travel")) {
                Tarif_Rute cari = Tarif_Rute.getHargaTiket(kota_asal, kota_tujuan, jenis_kendaraan);
                if (cari == null) {
                    hasil = Tarif_Rute.addTK(kota_asal, kota_tujuan, jenis_kendaraan, harga);
                } else {
                    JOptionPane.showMessageDialog(null, "Duplikat Data Kota Asal, Kota Tujuan dan Jenis Kendaraan", "Alert", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                int id = Integer.parseInt(id_tarifForm.getText());
                hasil = Tarif_Rute.updateTK(id, kota_asal, kota_tujuan, jenis_kendaraan, harga);
            }
            if (hasil) {
                TKFormFrame.setVisible(false);
                JOptionPane.showMessageDialog(null, "Berhasil menambahkan Data Travel", "Alert", JOptionPane.INFORMATION_MESSAGE);
                listTK(false);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menambahkan Data Travel", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SubmitTKActionPerformed
    private void tbl_dataTKMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataTKMouseClicked
        int row = tbl_dataTK.rowAtPoint(evt.getPoint());
        int colom = tbl_dataTK.columnAtPoint(evt.getPoint());
        int id = (int) tbl_dataTK.getValueAt(row, 0);
        if (colom == 6) {
            titleTKForm.setText("Edit Data Travel");
            Tarif_Rute d = Tarif_Rute.getById(id);
            id_tarifForm.setText(Integer.toString(id));
            asalFormAdmin.setText(d.getTempat_asal());
            kendaraanFormAdmin.setSelectedItem(d.getJenis_kendaraan());
            tujuanFormAdmin.setSelectedItem(d.getTempat_tujuan());
            hargaKFormAdmin.setText(Integer.toString(d.getHarga()));
            TKFormFrame.setVisible(true);
        }
        if (colom == 7) {
            int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus data ini?", "peringatan", JOptionPane.YES_NO_OPTION);
            if (pilihan == JOptionPane.YES_OPTION) {
                boolean hasil = Tarif_Rute.deleteTK(id);
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Berhasil menghapus Data Travel", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    listTK(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal menghapus Data Travel", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tbl_dataTKMouseClicked
    private void addDataTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataTKActionPerformed
        titleTKForm.setText("Tambah Data Travel");

        asalFormAdmin.setText("");
        tujuanFormAdmin.removeAllItems();
        kendaraanFormAdmin.setSelectedIndex(0);
        hargaKFormAdmin.setText("");

        errAsalFormAdmin.setText("");
        errTujuanFormAdmin.setText("");
        errKendaraanFormAdmin.setText("");
        errHargaKFormAdmin.setText("");

        TKFormFrame.setVisible(true);
    }//GEN-LAST:event_addDataTKActionPerformed
//    Tiket Wisata
    private void listTW(boolean cari) {
        List<Data_Wisata> list;
        if (cari) {
            String keyword = cariTW.getText();
            list = Data_Wisata.search(keyword);
        } else {
            list = Data_Wisata.getAll();
        }
        DefaultTableModel model = (DefaultTableModel) tbl_dataTW.getModel();
        model.setRowCount(0);
        
        int no =1;
        for (Data_Wisata l : list) {            
            model.addRow(new Object[]{
                l.getId_wisata(),
                no++,
                l.getNama_wisata(),
                l.getKota(),
                l.getHarga(),
                "Edit",
                "Hapus"
            });
        }
        tbl_dataTW.getColumnModel().getColumn(5).setCellRenderer(new CustomRenderer());
        tbl_dataTW.getColumnModel().getColumn(6).setCellRenderer(new CustomRenderer());
        CustomRenderer.customizeHeader(tbl_dataTW);
    }
    private void SubmitTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitTWActionPerformed
        if (wisataFormAdmin.getText().trim().isEmpty()) {
            errWisataFormAdmin.setText("* Nama Wisata tidak boleh kosong");
        } else {
            errWisataFormAdmin.setText("");
        }
        if (kotaWFormAdmin.getSelectedIndex() == 0) {
            errKotaWFormAdmin.setText("* Anda belum memilih");
        } else {
            errKotaWFormAdmin.setText("");
        }
        if (hargaWFormAdmin.getText().trim().isEmpty()) {
            errHargaWFormAdmin.setText("* Harga tidak boleh kosong");
        } else {
            if (hargaWFormAdmin.getText().matches("^08[0-9]{8,12}")) {
                errHargaWFormAdmin.setText("* Inputkan angka saja");
            } else {
                if (Integer.parseInt(hargaWFormAdmin.getText()) < 0) {
                    errHargaWFormAdmin.setText("Tidak boleh mines");
                } else {
                    errHargaWFormAdmin.setText("");
                }
            }
        }
        if (errWisataFormAdmin.getText().trim().isEmpty() && errKotaWFormAdmin.getText().trim().isEmpty() && errHargaWFormAdmin.getText().trim().isEmpty()) {
            String nama_wisata = wisataFormAdmin.getText();
            String kota = kotaWFormAdmin.getSelectedItem().toString();
            int harga = Integer.parseInt(hargaWFormAdmin.getText());
            boolean hasil = false;
            if (titleTWForm.getText().equals("Tambah Data Wisata")) {
                hasil = Data_Wisata.addTW(nama_wisata, kota, harga);
            } else {
                int id = Integer.parseInt(id_wisataForm.getText());
                hasil = Data_Wisata.updateTW(id, nama_wisata, kota, harga);
            }
            if (hasil) {
                TWFormFrame.setVisible(false);
                JOptionPane.showMessageDialog(null, "Berhasil menambahkan Data Wisata", "Alert", JOptionPane.INFORMATION_MESSAGE);
                listTW(false);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menambahkan Data Wisata", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SubmitTWActionPerformed
    private void tbl_dataTWMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataTWMouseClicked
        int row = tbl_dataTW.rowAtPoint(evt.getPoint());
        int colom = tbl_dataTW.columnAtPoint(evt.getPoint());
        int id = (int) tbl_dataTW.getValueAt(row, 0);
        if (colom == 5) {
            titleTWForm.setText("Edit Data Wisata");
            Data_Wisata d = Data_Wisata.getById(id);
            id_wisataForm.setText(Integer.toString(id));
            wisataFormAdmin.setText(d.getNama_wisata());
            kotaWFormAdmin.setSelectedItem(d.getKota());
            hargaWFormAdmin.setText(Integer.toString(d.getHarga()));
            TWFormFrame.setVisible(true);
        }
        if (colom == 6) {
            int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus data ini?", "peringatan", JOptionPane.YES_NO_OPTION);
            if (pilihan == JOptionPane.YES_OPTION) {
                boolean hasil = Data_Wisata.deleteTW(id);
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Berhasil menghapus Data Wisata", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    listTW(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal menghapus Data Wisata", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tbl_dataTWMouseClicked
    private void addDataTWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataTWActionPerformed
        titleTWForm.setText("Tambah Data Wisata");

        wisataFormAdmin.setText("");
        kotaWFormAdmin.setSelectedIndex(0);
        hargaWFormAdmin.setText("");

        errWisataFormAdmin.setText("");
        errKotaWFormAdmin.setText("");
        errHargaWFormAdmin.setText("");

        TWFormFrame.setVisible(true);
    }//GEN-LAST:event_addDataTWActionPerformed
//    Tiket Hotel
    private void listTH(boolean cari) {
        List<Data_Hotel> list;
        if (cari) {
            String keyword = cariTH.getText();
            list = Data_Hotel.search(keyword);
        } else {
            list = Data_Hotel.getAll();
        }
        DefaultTableModel model = (DefaultTableModel) tbl_dataTH.getModel();
        model.setRowCount(0);
        
        int no =1;
        for (Data_Hotel l : list) {            
            model.addRow(new Object[]{
                l.getId_hotel(),
                no++,
                l.getNama_hotel(),
                l.getKota(),
                l.getJenis_kamar(),
                l.getHarga(),
                l.getJumlah_kamar_tersedia(),
                "Edit",
                "Hapus"
            });
        }
        tbl_dataTH.getColumnModel().getColumn(7).setCellRenderer(new CustomRenderer());
        tbl_dataTH.getColumnModel().getColumn(8).setCellRenderer(new CustomRenderer());
        CustomRenderer.customizeHeader(tbl_dataTH);
    }
    private void SubmitTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitTHActionPerformed
        if (hotelFormAdmin.getText().trim().isEmpty()) {
            errHotelFormAdmin.setText("* Nama Hotel tidak boleh kosong");
        } else {
            errHotelFormAdmin.setText("");
        }
        if (kotaHFormAdmin.getSelectedIndex() == 0) {
            errKotaHFormAdmin.setText("* Anda belum memilih");
        } else {
            errKotaHFormAdmin.setText("");
        }
        if (jenisFormAdmin.getText().trim().isEmpty()) {
            errJenisFormAdmin.setText("* Nama Hotel tidak boleh kosong");
        } else {
            errJenisFormAdmin.setText("");
        }
        if (hargaHFormAdmin.getText().trim().isEmpty()) {
            errHargaHFormAdmin.setText("* Harga tidak boleh kosong");
        } else {
            if (hargaHFormAdmin.getText().matches("^08[0-9]{8,12}")) {
                errHargaHFormAdmin.setText("* Inputkan angka saja");
            } else {
                if (Integer.parseInt(hargaHFormAdmin.getText()) < 0) {
                    errHargaHFormAdmin.setText("Tidak boleh mines");
                } else {
                    errHargaHFormAdmin.setText("");
                }
            }
        }
        if (tersediaFormAdmin.getText().trim().isEmpty()) {
            errTersediaFormAdmin.setText("* Tersedia tidak boleh kosong");
        } else {
            if (tersediaFormAdmin.getText().matches("^08[0-9]{8,12}")) {
                errTersediaFormAdmin.setText("* Inputkan angka saja");
            } else {
                if (Integer.parseInt(tersediaFormAdmin.getText()) < 0) {
                    errTersediaFormAdmin.setText("Tidak boleh mines");
                } else {
                    errTersediaFormAdmin.setText("");
                }
            }
        }
        
        if (errHotelFormAdmin.getText().trim().isEmpty() && errKotaHFormAdmin.getText().trim().isEmpty() && errJenisFormAdmin.getText().trim().isEmpty() && errHargaHFormAdmin.getText().trim().isEmpty() && errTersediaFormAdmin.getText().trim().isEmpty()) {
            String nama_hotel = hotelFormAdmin.getText();
            String kota = kotaHFormAdmin.getSelectedItem().toString();
            String jenis_kamar = jenisFormAdmin.getText();
            int harga = Integer.parseInt(hargaHFormAdmin.getText());
            int jumlah_kamar_tersedia = Integer.parseInt(tersediaFormAdmin.getText());

            boolean hasil = false;
            if (titleTHForm.getText().equals("Tambah Data Hotel")) {
                hasil = Data_Hotel.addTH(nama_hotel, kota, jenis_kamar, harga, jumlah_kamar_tersedia);
            } else {
                int id = Integer.parseInt(id_hotelForm.getText());
                hasil = Data_Hotel.updateTH(id, nama_hotel, kota, jenis_kamar, harga, jumlah_kamar_tersedia);
            }
            if (hasil) {
                THFormFrame.setVisible(false);
                JOptionPane.showMessageDialog(null, "Berhasil menambahkan Data Hotel", "Alert", JOptionPane.INFORMATION_MESSAGE);
                listTH(false);
            } else {
                JOptionPane.showMessageDialog(null, "Gagal menambahkan Data Hotel", "Alert", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_SubmitTHActionPerformed
    private void tbl_dataTHMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_dataTHMouseClicked
        int row = tbl_dataTH.rowAtPoint(evt.getPoint());
        int colom = tbl_dataTH.columnAtPoint(evt.getPoint());
        int id = (int) tbl_dataTH.getValueAt(row, 0);
        if (colom == 7) {
            titleTHForm.setText("Edit Data Hotel");
            Data_Hotel d = Data_Hotel.getById(id);
            id_hotelForm.setText(Integer.toString(id));
            hotelFormAdmin.setText(d.getNama_hotel());
            kotaHFormAdmin.setSelectedItem(d.getKota());
            jenisFormAdmin.setText(d.getJenis_kamar());
            hargaHFormAdmin.setText(Integer.toString(d.getHarga()));
            tersediaFormAdmin.setText(Integer.toString(d.getJumlah_kamar_tersedia()));
            THFormFrame.setVisible(true);
        }
        if (colom == 8) {
            int pilihan = JOptionPane.showConfirmDialog(null, "Anda yakin ingin menghapus data ini?", "peringatan", JOptionPane.YES_NO_OPTION);
            if (pilihan == JOptionPane.YES_OPTION) {
                boolean hasil = Data_Hotel.deleteTH(id);
                if (hasil) {
                    JOptionPane.showMessageDialog(null, "Berhasil menghapus Data Hotel", "Alert", JOptionPane.INFORMATION_MESSAGE);
                    listTH(false);
                } else {
                    JOptionPane.showMessageDialog(null, "Gagal menghapus Data Hotel", "Alert", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_tbl_dataTHMouseClicked
    private void addDataTHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addDataTHActionPerformed
        titleTHForm.setText("Tambah Data Hotel");

        hotelFormAdmin.setText("");
        kotaHFormAdmin.setSelectedIndex(0);
        jenisFormAdmin.setText("");
        hargaHFormAdmin.setText("");
        tersediaFormAdmin.setText("");

        errHotelFormAdmin.setText("");
        errKotaHFormAdmin.setText("");
        errJenisFormAdmin.setText("");
        errHargaHFormAdmin.setText("");
        errTersediaFormAdmin.setText("");

        THFormFrame.setVisible(true);
    }//GEN-LAST:event_addDataTHActionPerformed
//    Transaksi
    private void readTransaksi_TK() {
        List<Tiket_Kendaraan> list_TK = Tiket_Kendaraan.getAll();
        DefaultTableModel model = (DefaultTableModel) tbl_TKAdmin.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Kendaraan TK : list_TK) {  
            Tarif_Rute tr = Tarif_Rute.getById(TK.getId_tarif());
            User u = User.getById(TK.getId_user());
            model.addRow(new Object[]{
                TK.getId_tiket_kendaraan(),
                no++,
                u.getEmail(),
                tr.getTempat_asal(),
                tr.getTempat_tujuan(),
                tr.getJenis_kendaraan(),
                outputFormatDatetime.format(TK.getWaktu()), 
                TK.getJumlah(),
                TK.getTotal_harga(),
                (TK.getStatus().equals(0)) ? "" : TK.getStatus()
            });
        }
        
        CBTempatAsal_TK.removeAllItems();
        List<Tarif_Rute> list_TempatAsal = Tarif_Rute.getAllTempatAsal();
            CBTempatAsal_TK.addItem("---Pilih Tempat Asal---");
        for (Tarif_Rute tr : list_TempatAsal) {
            CBTempatAsal_TK.addItem(tr.getTempat_asal());
        }
        CustomRenderer.customizeHeader(tbl_TKAdmin);
    }
    private void readTransaksi_TW() {
        List<Tiket_Wisata> list_TW = Tiket_Wisata.getAll();
        DefaultTableModel model = (DefaultTableModel) tbl_TWAdmin.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Wisata TW : list_TW) {  
            Data_Wisata dw = Data_Wisata.getById(TW.getid_wisata());
            User u = User.getById(TW.getId_user());
            model.addRow(new Object[]{
                TW.getId_tiket_wisata(),
                no++,
                u.getEmail(),
                dw.getNama_wisata(),
                outputFormatDatetime.format(TW.getWaktu()), 
                TW.getJumlah(),
                TW.getTotal_harga(),
                (TW.getStatus().equals(0)) ? "" : TW.getStatus()
            });
        }
        CustomRenderer.customizeHeader(tbl_TWAdmin);
    }
    private void readTransaksi_TI() {
        List<Tiket_Hotel> list_TI = Tiket_Hotel.getAll();
        DefaultTableModel model = (DefaultTableModel) tbl_TIAdmin.getModel();
        model.setRowCount(0);
        
        int no = 1;
        for (Tiket_Hotel TI : list_TI) {  
            List<Detail_Tiket_Hotel> list_dth = Detail_Tiket_Hotel.getById_tiket_hotel(TI.getId_tiket_hotel());
            String detail_pesan = "";
            String nama_hotel = "";
            for (Detail_Tiket_Hotel dth : list_dth) {
                Data_Hotel dh = Data_Hotel.getById(dth.getId_hotel());
                nama_hotel = dh.getNama_hotel();
                detail_pesan += " - Kamar " + dh.getJenis_kamar() + " " + dth.getJumlah() + "\n";
            }
            User u = User.getById(TI.getId_user());
            model.addRow(new Object[]{
                TI.getId_tiket_hotel(),
                no++,
                u.getEmail(),
                nama_hotel,
                outputFormatDatetime.format(TI.getTgl_cekin()), 
                outputFormatDatetime.format(TI.getTgl_cekout()),
                TI.getTotal_harga(),
                (TI.getStatus().equals(0)) ? "" : TI.getStatus(),
                "Detail"
            });
        }
        Pesan_TI.setEnabled(false);
        CustomRenderer.customizeHeader(tbl_TIAdmin);
    } 

    private void tbl_TIAdminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_TIAdminMouseClicked
        int row = tbl_TIAdmin.rowAtPoint(evt.getPoint());
        int colom = tbl_TIAdmin.columnAtPoint(evt.getPoint());
        int id = (int) tbl_TIAdmin.getValueAt(row, 0);
        if (colom == 8) {
            DetailTransaksiKamar.setVisible(true);

            String nama_kota = "";
            String nama_hotel = "";
            String list_kamar = "";
            Tiket_Hotel data = Tiket_Hotel.getById(id);
            User u = User.getById(data.getId_user());
            List<Detail_Tiket_Hotel> dth_list = Detail_Tiket_Hotel.getById_tiket_hotel(id);
            for (Detail_Tiket_Hotel dth : dth_list) {
                Data_Hotel dh = Data_Hotel.getById(dth.getId_hotel());
                nama_kota = dh.getKota();
                nama_hotel = dh.getNama_hotel();
                list_kamar += "- Kamar" + dh.getJenis_kamar() + " | " + dth.getJumlah() + " | " + dth.getTotal_harga() + "\n";
            }
            DetailTransaksi_TI.setText(
                "Data Pembeli :" +
                "\nNama : " + u.getNama() +
                "\nEmail : " + u.getEmail() +
                "\nNo HP : " + u.getNo_telp() +
                "\n\nData Transaksi : " +
                "\nNama Hotel     : " + nama_hotel +
                "\nNama Kota      : " + nama_kota +
                "\nTanggal Cekin  : " + outputFormatDatetime.format(data.getTgl_cekin()) +
                "\nTanggal Cekout : " + outputFormatDatetime.format(data.getTgl_cekout()) +
                "\nDetail Pesanan : \n" + list_kamar +
                "Total Biaya    : " + data.getTotal_harga()
            );
        }
    }//GEN-LAST:event_tbl_TIAdminMouseClicked
//    Cari
    private void cari_UserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_UserActionPerformed
        if (!cariUser.getText().trim().isEmpty()) {
            listUser(true);
        } else {
            listUser(false);
        }
    }//GEN-LAST:event_cari_UserActionPerformed
    private void cari_TKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_TKActionPerformed
        if (cariJenisKendaraan.getSelectedIndex() != 0 || cariTempatAsal.getSelectedIndex() != 0 || cariTempatTujuan.getSelectedIndex() != 0) {
            listTK(true);
        } else {
            listTK(false);
        }
    }//GEN-LAST:event_cari_TKActionPerformed
    private void cari_TWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_TWActionPerformed
        if (!cariTW.getText().trim().isEmpty()) {
            listTW(true);
        } else {
            listTW(false);
        }
    }//GEN-LAST:event_cari_TWActionPerformed
    private void cari_THActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cari_THActionPerformed
        if (!cariTH.getText().trim().isEmpty()) {
            listTH(true);
        } else {
            listTH(false);
        }
    }//GEN-LAST:event_cari_THActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(App.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new App().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AdminPage;
    private javax.swing.JPanel App;
    private javax.swing.JComboBox<String> CBJenisKendaraan_TK;
    private javax.swing.JComboBox<String> CBPilihHotel_TI;
    private javax.swing.JComboBox<String> CBPilihKota_TI;
    private javax.swing.JComboBox<String> CBPilihKota_TW;
    private javax.swing.JComboBox<String> CBPilihWisata_TW;
    private javax.swing.JComboBox<String> CBTempatAsal_TK;
    private javax.swing.JComboBox<String> CBTempatTujuan_TK;
    private javax.swing.JButton CekKetersediaan_TI;
    private javax.swing.JPanel DashboardPanel;
    private javax.swing.JScrollPane DataTiketHotel;
    private javax.swing.JScrollPane DataTiketKendaraan;
    private javax.swing.JScrollPane DataTiketWisata;
    private javax.swing.JScrollPane DataTransaksi;
    private javax.swing.JScrollPane DataUser;
    private javax.swing.JInternalFrame DetailPesananKamar;
    private javax.swing.JInternalFrame DetailTransaksiKamar;
    private javax.swing.JTextArea DetailTransaksi_TI;
    private javax.swing.JTextField HargaTiket_TK;
    private javax.swing.JTextField HargaTiket_TW;
    private javax.swing.JPanel HistoriPanel;
    private javax.swing.JButton Hitung_TI;
    private javax.swing.JPanel HomePanel;
    private javax.swing.JCheckBox JenisKamarDeluxe;
    private javax.swing.JCheckBox JenisKamarStandart;
    private javax.swing.JCheckBox JenisKamarSuite;
    private javax.swing.JSpinner JumlahKamarDeluxe;
    private javax.swing.JSpinner JumlahKamarStandart;
    private javax.swing.JSpinner JumlahKamarSuite;
    private javax.swing.JSpinner Jumlah_TK;
    private javax.swing.JSpinner Jumlah_TW;
    private javax.swing.JPanel Konten;
    private javax.swing.JPanel KontenUtama;
    private javax.swing.JPanel KontenUtamaAdmin;
    private javax.swing.JButton Login;
    private javax.swing.JPanel LoginPanel;
    private javax.swing.JButton Logout;
    private javax.swing.JPanel Navbar;
    private javax.swing.JPanel Navbar1;
    private javax.swing.JPanel PesanHotelPanel;
    private javax.swing.JPanel PesanKendaraanPanel;
    private javax.swing.JPanel PesanWisataPanel;
    private javax.swing.JButton Pesan_TI;
    private javax.swing.JButton Pesan_TK;
    private javax.swing.JButton Pesan_TW;
    private javax.swing.JButton Register;
    private javax.swing.JPanel RegisterPanel;
    private javax.swing.JPanel Sidebar;
    private javax.swing.JButton SubmitTH;
    private javax.swing.JButton SubmitTK;
    private javax.swing.JButton SubmitTW;
    private javax.swing.JTextArea TADetail_TI;
    private javax.swing.JInternalFrame THFormFrame;
    private javax.swing.JInternalFrame TKFormFrame;
    private javax.swing.JInternalFrame TWFormFrame;
    private javax.swing.JSpinner TglCekin_TI;
    private javax.swing.JSpinner TglCekout_TI;
    private javax.swing.JTextField TotalHarga_TI;
    private javax.swing.JPanel UserPage;
    private javax.swing.JSpinner Waktu_TK;
    private javax.swing.JSpinner Waktu_TW;
    private javax.swing.JButton addDataTH;
    private javax.swing.JButton addDataTK;
    private javax.swing.JButton addDataTW;
    private javax.swing.JTextField asalFormAdmin;
    private javax.swing.JButton batalPesan_TI;
    private javax.swing.JButton batalPesan_TK;
    private javax.swing.JButton batalPesan_TW;
    private javax.swing.JComboBox<String> cariJenisKendaraan;
    private javax.swing.JTextField cariTH;
    private javax.swing.JTextField cariTW;
    private javax.swing.JComboBox<String> cariTempatAsal;
    private javax.swing.JComboBox<String> cariTempatTujuan;
    private javax.swing.JTextField cariUser;
    private javax.swing.JButton cari_TH;
    private javax.swing.JButton cari_TK;
    private javax.swing.JButton cari_TW;
    private javax.swing.JButton cari_User;
    private javax.swing.JPanel contentDataTiketHotel;
    private javax.swing.JPanel contentDataTiketKendaraan;
    private javax.swing.JPanel contentDataTiketWisata;
    private javax.swing.JPanel contentDataTransaksi;
    private javax.swing.JPanel contentDataUser;
    private javax.swing.JButton detail_TI;
    private javax.swing.JButton edit_TI1;
    private javax.swing.JButton edit_TK;
    private javax.swing.JButton edit_TW;
    private javax.swing.JTextField emailLogin;
    private javax.swing.JTextField emailRegister;
    private javax.swing.JLabel errAsalFormAdmin;
    private javax.swing.JLabel errCBJenisKendaraan_TK;
    private javax.swing.JLabel errCBPilihHotel_TI;
    private javax.swing.JLabel errCBPilihKota_TI;
    private javax.swing.JLabel errCBPilihKota_TW;
    private javax.swing.JLabel errCBPilihWisata_TW;
    private javax.swing.JLabel errCBTempatAsal_TK;
    private javax.swing.JLabel errEmailLogin;
    private javax.swing.JLabel errEmailRegister;
    private javax.swing.JLabel errHargaHFormAdmin;
    private javax.swing.JLabel errHargaKFormAdmin;
    private javax.swing.JLabel errHargaWFormAdmin;
    private javax.swing.JLabel errHotelFormAdmin;
    private javax.swing.JLabel errJenisFormAdmin;
    private javax.swing.JLabel errKendaraanFormAdmin;
    private javax.swing.JLabel errKotaHFormAdmin;
    private javax.swing.JLabel errKotaWFormAdmin;
    private javax.swing.JLabel errNamaRegister;
    private javax.swing.JLabel errNohpRegister;
    private javax.swing.JLabel errPasswordLogin;
    private javax.swing.JLabel errPasswordRegister;
    private javax.swing.JLabel errTersediaFormAdmin;
    private javax.swing.JLabel errTujuanFormAdmin;
    private javax.swing.JLabel errWisataFormAdmin;
    private javax.swing.JTextField hargaHFormAdmin;
    private javax.swing.JTextField hargaKFormAdmin;
    private javax.swing.JTextField hargaWFormAdmin;
    private javax.swing.JTextField hotelFormAdmin;
    private javax.swing.JLabel id_hotelForm;
    private javax.swing.JLabel id_tarifForm;
    private javax.swing.JLabel id_wisataForm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane13;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTextField jenisFormAdmin;
    private javax.swing.JComboBox<String> kendaraanFormAdmin;
    private javax.swing.JComboBox<String> kotaHFormAdmin;
    private javax.swing.JComboBox<String> kotaWFormAdmin;
    private javax.swing.JTextField namaRegister;
    private javax.swing.JButton navDataTH;
    private javax.swing.JButton navDataTK;
    private javax.swing.JButton navDataTW;
    private javax.swing.JButton navDataTransaksi;
    private javax.swing.JButton navDataUser;
    private javax.swing.JTextField no_telpRegister;
    private javax.swing.JButton out;
    private javax.swing.JTextField passwordLogin;
    private javax.swing.JTextField passwordRegister;
    private javax.swing.JButton pindahLogin;
    private javax.swing.JButton pindahRegister;
    private javax.swing.JTable tbl_TI;
    private javax.swing.JTable tbl_TIAdmin;
    private javax.swing.JTable tbl_TK;
    private javax.swing.JTable tbl_TKAdmin;
    private javax.swing.JTable tbl_TW;
    private javax.swing.JTable tbl_TWAdmin;
    private javax.swing.JTable tbl_dataTH;
    private javax.swing.JTable tbl_dataTK;
    private javax.swing.JTable tbl_dataTW;
    private javax.swing.JTable tbl_dataUser;
    private javax.swing.JTextField tersediaFormAdmin;
    private javax.swing.JLabel titleTHForm;
    private javax.swing.JLabel titleTKForm;
    private javax.swing.JLabel titleTWForm;
    private javax.swing.JComboBox<String> tujuanFormAdmin;
    private javax.swing.JTextField wisataFormAdmin;
    // End of variables declaration//GEN-END:variables
}
